Search.setIndex({"docnames": ["api/generated/pywr.core.Scenario", "api/generated/pywr.core.ScenarioCollection", "api/generated/pywr.core.ScenarioIndex", "api/generated/pywr.core.Timestep", "api/generated/pywr.domains.river.Catchment", "api/generated/pywr.domains.river.Reservoir", "api/generated/pywr.domains.river.River", "api/generated/pywr.domains.river.RiverGauge", "api/generated/pywr.domains.river.RiverSplit", "api/generated/pywr.domains.river.RiverSplitWithGauge", "api/generated/pywr.nodes.AggregatedNode", "api/generated/pywr.nodes.AggregatedStorage", "api/generated/pywr.nodes.AnnualVirtualStorage", "api/generated/pywr.nodes.BreakLink", "api/generated/pywr.nodes.DelayNode", "api/generated/pywr.nodes.Input", "api/generated/pywr.nodes.Link", "api/generated/pywr.nodes.LossLink", "api/generated/pywr.nodes.MonthlyVirtualStorage", "api/generated/pywr.nodes.MultiSplitLink", "api/generated/pywr.nodes.Node", "api/generated/pywr.nodes.Output", "api/generated/pywr.nodes.PiecewiseLink", "api/generated/pywr.nodes.RollingVirtualStorage", "api/generated/pywr.nodes.SeasonalVirtualStorage", "api/generated/pywr.nodes.Storage", "api/generated/pywr.nodes.VirtualStorage", "api/generated/pywr.parameters.AbstractThresholdParameter", "api/generated/pywr.parameters.AggregatedIndexParameter", "api/generated/pywr.parameters.AggregatedParameter", "api/generated/pywr.parameters.AnnualHarmonicSeriesParameter", "api/generated/pywr.parameters.ArrayIndexedParameter", "api/generated/pywr.parameters.ArrayIndexedScenarioMonthlyFactorsParameter", "api/generated/pywr.parameters.ArrayIndexedScenarioParameter", "api/generated/pywr.parameters.BinaryStepParameter", "api/generated/pywr.parameters.ConstantParameter", "api/generated/pywr.parameters.ConstantScenarioIndexParameter", "api/generated/pywr.parameters.ConstantScenarioParameter", "api/generated/pywr.parameters.CurrentOrdinalDayThresholdParameter", "api/generated/pywr.parameters.CurrentYearThresholdParameter", "api/generated/pywr.parameters.DailyProfileParameter", "api/generated/pywr.parameters.DataFrameParameter", "api/generated/pywr.parameters.DeficitParameter", "api/generated/pywr.parameters.DiscountFactorParameter", "api/generated/pywr.parameters.DivisionParameter", "api/generated/pywr.parameters.FlowDelayParameter", "api/generated/pywr.parameters.FlowParameter", "api/generated/pywr.parameters.HydropowerTargetParameter", "api/generated/pywr.parameters.IndexParameter", "api/generated/pywr.parameters.IndexedArrayParameter", "api/generated/pywr.parameters.InterpolatedFlowParameter", "api/generated/pywr.parameters.InterpolatedParameter", "api/generated/pywr.parameters.InterpolatedQuadratureParameter", "api/generated/pywr.parameters.InterpolatedVolumeParameter", "api/generated/pywr.parameters.LogisticParameter", "api/generated/pywr.parameters.MaxParameter", "api/generated/pywr.parameters.MinParameter", "api/generated/pywr.parameters.MonthlyProfileParameter", "api/generated/pywr.parameters.MultipleThresholdIndexParameter", "api/generated/pywr.parameters.MultipleThresholdParameterIndexParameter", "api/generated/pywr.parameters.NegativeMaxParameter", "api/generated/pywr.parameters.NegativeMinParameter", "api/generated/pywr.parameters.NegativeParameter", "api/generated/pywr.parameters.NodeThresholdParameter", "api/generated/pywr.parameters.OffsetParameter", "api/generated/pywr.parameters.Parameter", "api/generated/pywr.parameters.ParameterThresholdParameter", "api/generated/pywr.parameters.PiecewiseIntegralParameter", "api/generated/pywr.parameters.RbfProfileParameter", "api/generated/pywr.parameters.RecorderThresholdParameter", "api/generated/pywr.parameters.RectifierParameter", "api/generated/pywr.parameters.RollingMeanFlowNodeParameter", "api/generated/pywr.parameters.ScenarioDailyProfileParameter", "api/generated/pywr.parameters.ScenarioMonthlyProfileParameter", "api/generated/pywr.parameters.ScenarioWeeklyProfileParameter", "api/generated/pywr.parameters.ScenarioWrapperParameter", "api/generated/pywr.parameters.StorageParameter", "api/generated/pywr.parameters.StorageThresholdParameter", "api/generated/pywr.parameters.TablesArrayParameter", "api/generated/pywr.parameters.UniformDrawdownProfileParameter", "api/generated/pywr.parameters.WeeklyProfileParameter", "api/generated/pywr.parameters.WeightedAverageProfileParameter", "api/generated/pywr.parameters.control_curves.BaseControlCurveParameter", "api/generated/pywr.parameters.control_curves.ControlCurveIndexParameter", "api/generated/pywr.parameters.control_curves.ControlCurveInterpolatedParameter", "api/generated/pywr.parameters.control_curves.ControlCurveParameter", "api/generated/pywr.parameters.control_curves.ControlCurvePiecewiseInterpolatedParameter", "api/generated/pywr.recorders.AggregatedRecorder", "api/generated/pywr.recorders.Aggregator", "api/generated/pywr.recorders.AnnualCountIndexParameterRecorder", "api/generated/pywr.recorders.AnnualCountIndexThresholdRecorder", "api/generated/pywr.recorders.AnnualTotalFlowRecorder", "api/generated/pywr.recorders.CSVRecorder", "api/generated/pywr.recorders.DeficitFrequencyNodeRecorder", "api/generated/pywr.recorders.FlowDurationCurveDeviationRecorder", "api/generated/pywr.recorders.FlowDurationCurveRecorder", "api/generated/pywr.recorders.GaussianKDEStorageRecorder", "api/generated/pywr.recorders.HydropowerRecorder", "api/generated/pywr.recorders.IndexParameterRecorder", "api/generated/pywr.recorders.MeanFlowNodeRecorder", "api/generated/pywr.recorders.MeanParameterRecorder", "api/generated/pywr.recorders.MinimumThresholdVolumeStorageRecorder", "api/generated/pywr.recorders.MinimumVolumeStorageRecorder", "api/generated/pywr.recorders.NodeRecorder", "api/generated/pywr.recorders.NormalisedGaussianKDEStorageRecorder", "api/generated/pywr.recorders.NumpyArrayAreaRecorder", "api/generated/pywr.recorders.NumpyArrayDailyProfileParameterRecorder", "api/generated/pywr.recorders.NumpyArrayIndexParameterRecorder", "api/generated/pywr.recorders.NumpyArrayLevelRecorder", "api/generated/pywr.recorders.NumpyArrayNodeCurtailmentRatioRecorder", "api/generated/pywr.recorders.NumpyArrayNodeDeficitRecorder", "api/generated/pywr.recorders.NumpyArrayNodeRecorder", "api/generated/pywr.recorders.NumpyArrayNodeSuppliedRatioRecorder", "api/generated/pywr.recorders.NumpyArrayParameterRecorder", "api/generated/pywr.recorders.NumpyArrayStorageRecorder", "api/generated/pywr.recorders.ParameterRecorder", "api/generated/pywr.recorders.Recorder", "api/generated/pywr.recorders.RollingMeanFlowNodeRecorder", "api/generated/pywr.recorders.RollingWindowParameterRecorder", "api/generated/pywr.recorders.SeasonalFlowDurationCurveRecorder", "api/generated/pywr.recorders.StorageDurationCurveRecorder", "api/generated/pywr.recorders.StorageRecorder", "api/generated/pywr.recorders.TablesRecorder", "api/generated/pywr.recorders.TimestepCountIndexParameterRecorder", "api/generated/pywr.recorders.TotalDeficitNodeRecorder", "api/generated/pywr.recorders.TotalFlowNodeRecorder", "api/generated/pywr.recorders.TotalHydroEnergyRecorder", "api/generated/pywr.recorders.TotalParameterRecorder", "api/pywr", "api/pywr.core", "api/pywr.nodes", "api/pywr.notebook", "api/pywr.optimisation", "api/pywr.parameters", "api/pywr.recorders", "api/pywr.solvers", "api/pywr.utils", "cookbook/aggregated_node", "cookbook/aggregated_parameter", "cookbook/control_curves", "cookbook/cookbook", "cookbook/dataframes", "cookbook/demand_saving", "err_perf", "extending_pywr/extending_pywr_nodes", "extending_pywr/extending_pywr_parameters", "extending_pywr/extending_pywr_recorders", "extending_pywr/index", "formulation", "index", "install", "json", "license", "tutorial"], "filenames": ["api/generated/pywr.core.Scenario.rst", "api/generated/pywr.core.ScenarioCollection.rst", "api/generated/pywr.core.ScenarioIndex.rst", "api/generated/pywr.core.Timestep.rst", "api/generated/pywr.domains.river.Catchment.rst", "api/generated/pywr.domains.river.Reservoir.rst", "api/generated/pywr.domains.river.River.rst", "api/generated/pywr.domains.river.RiverGauge.rst", "api/generated/pywr.domains.river.RiverSplit.rst", "api/generated/pywr.domains.river.RiverSplitWithGauge.rst", "api/generated/pywr.nodes.AggregatedNode.rst", "api/generated/pywr.nodes.AggregatedStorage.rst", "api/generated/pywr.nodes.AnnualVirtualStorage.rst", "api/generated/pywr.nodes.BreakLink.rst", "api/generated/pywr.nodes.DelayNode.rst", "api/generated/pywr.nodes.Input.rst", "api/generated/pywr.nodes.Link.rst", "api/generated/pywr.nodes.LossLink.rst", "api/generated/pywr.nodes.MonthlyVirtualStorage.rst", "api/generated/pywr.nodes.MultiSplitLink.rst", "api/generated/pywr.nodes.Node.rst", "api/generated/pywr.nodes.Output.rst", "api/generated/pywr.nodes.PiecewiseLink.rst", "api/generated/pywr.nodes.RollingVirtualStorage.rst", "api/generated/pywr.nodes.SeasonalVirtualStorage.rst", "api/generated/pywr.nodes.Storage.rst", "api/generated/pywr.nodes.VirtualStorage.rst", "api/generated/pywr.parameters.AbstractThresholdParameter.rst", "api/generated/pywr.parameters.AggregatedIndexParameter.rst", "api/generated/pywr.parameters.AggregatedParameter.rst", "api/generated/pywr.parameters.AnnualHarmonicSeriesParameter.rst", "api/generated/pywr.parameters.ArrayIndexedParameter.rst", "api/generated/pywr.parameters.ArrayIndexedScenarioMonthlyFactorsParameter.rst", "api/generated/pywr.parameters.ArrayIndexedScenarioParameter.rst", "api/generated/pywr.parameters.BinaryStepParameter.rst", "api/generated/pywr.parameters.ConstantParameter.rst", "api/generated/pywr.parameters.ConstantScenarioIndexParameter.rst", "api/generated/pywr.parameters.ConstantScenarioParameter.rst", "api/generated/pywr.parameters.CurrentOrdinalDayThresholdParameter.rst", "api/generated/pywr.parameters.CurrentYearThresholdParameter.rst", "api/generated/pywr.parameters.DailyProfileParameter.rst", "api/generated/pywr.parameters.DataFrameParameter.rst", "api/generated/pywr.parameters.DeficitParameter.rst", "api/generated/pywr.parameters.DiscountFactorParameter.rst", "api/generated/pywr.parameters.DivisionParameter.rst", "api/generated/pywr.parameters.FlowDelayParameter.rst", "api/generated/pywr.parameters.FlowParameter.rst", "api/generated/pywr.parameters.HydropowerTargetParameter.rst", "api/generated/pywr.parameters.IndexParameter.rst", "api/generated/pywr.parameters.IndexedArrayParameter.rst", "api/generated/pywr.parameters.InterpolatedFlowParameter.rst", "api/generated/pywr.parameters.InterpolatedParameter.rst", "api/generated/pywr.parameters.InterpolatedQuadratureParameter.rst", "api/generated/pywr.parameters.InterpolatedVolumeParameter.rst", "api/generated/pywr.parameters.LogisticParameter.rst", "api/generated/pywr.parameters.MaxParameter.rst", "api/generated/pywr.parameters.MinParameter.rst", "api/generated/pywr.parameters.MonthlyProfileParameter.rst", "api/generated/pywr.parameters.MultipleThresholdIndexParameter.rst", "api/generated/pywr.parameters.MultipleThresholdParameterIndexParameter.rst", "api/generated/pywr.parameters.NegativeMaxParameter.rst", "api/generated/pywr.parameters.NegativeMinParameter.rst", "api/generated/pywr.parameters.NegativeParameter.rst", "api/generated/pywr.parameters.NodeThresholdParameter.rst", "api/generated/pywr.parameters.OffsetParameter.rst", "api/generated/pywr.parameters.Parameter.rst", "api/generated/pywr.parameters.ParameterThresholdParameter.rst", "api/generated/pywr.parameters.PiecewiseIntegralParameter.rst", "api/generated/pywr.parameters.RbfProfileParameter.rst", "api/generated/pywr.parameters.RecorderThresholdParameter.rst", "api/generated/pywr.parameters.RectifierParameter.rst", "api/generated/pywr.parameters.RollingMeanFlowNodeParameter.rst", "api/generated/pywr.parameters.ScenarioDailyProfileParameter.rst", "api/generated/pywr.parameters.ScenarioMonthlyProfileParameter.rst", "api/generated/pywr.parameters.ScenarioWeeklyProfileParameter.rst", "api/generated/pywr.parameters.ScenarioWrapperParameter.rst", "api/generated/pywr.parameters.StorageParameter.rst", "api/generated/pywr.parameters.StorageThresholdParameter.rst", "api/generated/pywr.parameters.TablesArrayParameter.rst", "api/generated/pywr.parameters.UniformDrawdownProfileParameter.rst", "api/generated/pywr.parameters.WeeklyProfileParameter.rst", "api/generated/pywr.parameters.WeightedAverageProfileParameter.rst", "api/generated/pywr.parameters.control_curves.BaseControlCurveParameter.rst", "api/generated/pywr.parameters.control_curves.ControlCurveIndexParameter.rst", "api/generated/pywr.parameters.control_curves.ControlCurveInterpolatedParameter.rst", "api/generated/pywr.parameters.control_curves.ControlCurveParameter.rst", "api/generated/pywr.parameters.control_curves.ControlCurvePiecewiseInterpolatedParameter.rst", "api/generated/pywr.recorders.AggregatedRecorder.rst", "api/generated/pywr.recorders.Aggregator.rst", "api/generated/pywr.recorders.AnnualCountIndexParameterRecorder.rst", "api/generated/pywr.recorders.AnnualCountIndexThresholdRecorder.rst", "api/generated/pywr.recorders.AnnualTotalFlowRecorder.rst", "api/generated/pywr.recorders.CSVRecorder.rst", "api/generated/pywr.recorders.DeficitFrequencyNodeRecorder.rst", "api/generated/pywr.recorders.FlowDurationCurveDeviationRecorder.rst", "api/generated/pywr.recorders.FlowDurationCurveRecorder.rst", "api/generated/pywr.recorders.GaussianKDEStorageRecorder.rst", "api/generated/pywr.recorders.HydropowerRecorder.rst", "api/generated/pywr.recorders.IndexParameterRecorder.rst", "api/generated/pywr.recorders.MeanFlowNodeRecorder.rst", "api/generated/pywr.recorders.MeanParameterRecorder.rst", "api/generated/pywr.recorders.MinimumThresholdVolumeStorageRecorder.rst", "api/generated/pywr.recorders.MinimumVolumeStorageRecorder.rst", "api/generated/pywr.recorders.NodeRecorder.rst", "api/generated/pywr.recorders.NormalisedGaussianKDEStorageRecorder.rst", "api/generated/pywr.recorders.NumpyArrayAreaRecorder.rst", "api/generated/pywr.recorders.NumpyArrayDailyProfileParameterRecorder.rst", "api/generated/pywr.recorders.NumpyArrayIndexParameterRecorder.rst", "api/generated/pywr.recorders.NumpyArrayLevelRecorder.rst", "api/generated/pywr.recorders.NumpyArrayNodeCurtailmentRatioRecorder.rst", "api/generated/pywr.recorders.NumpyArrayNodeDeficitRecorder.rst", "api/generated/pywr.recorders.NumpyArrayNodeRecorder.rst", "api/generated/pywr.recorders.NumpyArrayNodeSuppliedRatioRecorder.rst", "api/generated/pywr.recorders.NumpyArrayParameterRecorder.rst", "api/generated/pywr.recorders.NumpyArrayStorageRecorder.rst", "api/generated/pywr.recorders.ParameterRecorder.rst", "api/generated/pywr.recorders.Recorder.rst", "api/generated/pywr.recorders.RollingMeanFlowNodeRecorder.rst", "api/generated/pywr.recorders.RollingWindowParameterRecorder.rst", "api/generated/pywr.recorders.SeasonalFlowDurationCurveRecorder.rst", "api/generated/pywr.recorders.StorageDurationCurveRecorder.rst", "api/generated/pywr.recorders.StorageRecorder.rst", "api/generated/pywr.recorders.TablesRecorder.rst", "api/generated/pywr.recorders.TimestepCountIndexParameterRecorder.rst", "api/generated/pywr.recorders.TotalDeficitNodeRecorder.rst", "api/generated/pywr.recorders.TotalFlowNodeRecorder.rst", "api/generated/pywr.recorders.TotalHydroEnergyRecorder.rst", "api/generated/pywr.recorders.TotalParameterRecorder.rst", "api/pywr.rst", "api/pywr.core.rst", "api/pywr.nodes.rst", "api/pywr.notebook.rst", "api/pywr.optimisation.rst", "api/pywr.parameters.rst", "api/pywr.recorders.rst", "api/pywr.solvers.rst", "api/pywr.utils.rst", "cookbook/aggregated_node.rst", "cookbook/aggregated_parameter.rst", "cookbook/control_curves.rst", "cookbook/cookbook.rst", "cookbook/dataframes.rst", "cookbook/demand_saving.rst", "err_perf.rst", "extending_pywr/extending_pywr_nodes.rst", "extending_pywr/extending_pywr_parameters.rst", "extending_pywr/extending_pywr_recorders.rst", "extending_pywr/index.rst", "formulation.rst", "index.rst", "install.rst", "json.rst", "license.rst", "tutorial.rst"], "titles": ["pywr.core.Scenario", "pywr.core.ScenarioCollection", "pywr.core.ScenarioIndex", "pywr.core.Timestep", "pywr.domains.river.Catchment", "pywr.domains.river.Reservoir", "pywr.domains.river.River", "pywr.domains.river.RiverGauge", "pywr.domains.river.RiverSplit", "pywr.domains.river.RiverSplitWithGauge", "pywr.nodes.AggregatedNode", "pywr.nodes.AggregatedStorage", "pywr.nodes.AnnualVirtualStorage", "pywr.nodes.BreakLink", "pywr.nodes.DelayNode", "pywr.nodes.Input", "pywr.nodes.Link", "pywr.nodes.LossLink", "pywr.nodes.MonthlyVirtualStorage", "pywr.nodes.MultiSplitLink", "pywr.nodes.Node", "pywr.nodes.Output", "pywr.nodes.PiecewiseLink", "pywr.nodes.RollingVirtualStorage", "pywr.nodes.SeasonalVirtualStorage", "pywr.nodes.Storage", "pywr.nodes.VirtualStorage", "pywr.parameters.AbstractThresholdParameter", "pywr.parameters.AggregatedIndexParameter", "pywr.parameters.AggregatedParameter", "pywr.parameters.AnnualHarmonicSeriesParameter", "pywr.parameters.ArrayIndexedParameter", "pywr.parameters.ArrayIndexedScenarioMonthlyFactorsParameter", "pywr.parameters.ArrayIndexedScenarioParameter", "pywr.parameters.BinaryStepParameter", "pywr.parameters.ConstantParameter", "pywr.parameters.ConstantScenarioIndexParameter", "pywr.parameters.ConstantScenarioParameter", "pywr.parameters.CurrentOrdinalDayThresholdParameter", "pywr.parameters.CurrentYearThresholdParameter", "pywr.parameters.DailyProfileParameter", "pywr.parameters.DataFrameParameter", "pywr.parameters.DeficitParameter", "pywr.parameters.DiscountFactorParameter", "pywr.parameters.DivisionParameter", "pywr.parameters.FlowDelayParameter", "pywr.parameters.FlowParameter", "pywr.parameters.HydropowerTargetParameter", "pywr.parameters.IndexParameter", "pywr.parameters.IndexedArrayParameter", "pywr.parameters.InterpolatedFlowParameter", "pywr.parameters.InterpolatedParameter", "pywr.parameters.InterpolatedQuadratureParameter", "pywr.parameters.InterpolatedVolumeParameter", "pywr.parameters.LogisticParameter", "pywr.parameters.MaxParameter", "pywr.parameters.MinParameter", "pywr.parameters.MonthlyProfileParameter", "pywr.parameters.MultipleThresholdIndexParameter", "pywr.parameters.MultipleThresholdParameterIndexParameter", "pywr.parameters.NegativeMaxParameter", "pywr.parameters.NegativeMinParameter", "pywr.parameters.NegativeParameter", "pywr.parameters.NodeThresholdParameter", "pywr.parameters.OffsetParameter", "pywr.parameters.Parameter", "pywr.parameters.ParameterThresholdParameter", "pywr.parameters.PiecewiseIntegralParameter", "pywr.parameters.RbfProfileParameter", "pywr.parameters.RecorderThresholdParameter", "pywr.parameters.RectifierParameter", "pywr.parameters.RollingMeanFlowNodeParameter", "pywr.parameters.ScenarioDailyProfileParameter", "pywr.parameters.ScenarioMonthlyProfileParameter", "pywr.parameters.ScenarioWeeklyProfileParameter", "pywr.parameters.ScenarioWrapperParameter", "pywr.parameters.StorageParameter", "pywr.parameters.StorageThresholdParameter", "pywr.parameters.TablesArrayParameter", "pywr.parameters.UniformDrawdownProfileParameter", "pywr.parameters.WeeklyProfileParameter", "pywr.parameters.WeightedAverageProfileParameter", "pywr.parameters.control_curves.BaseControlCurveParameter", "pywr.parameters.control_curves.ControlCurveIndexParameter", "pywr.parameters.control_curves.ControlCurveInterpolatedParameter", "pywr.parameters.control_curves.ControlCurveParameter", "pywr.parameters.control_curves.ControlCurvePiecewiseInterpolatedParameter", "pywr.recorders.AggregatedRecorder", "pywr.recorders.Aggregator", "pywr.recorders.AnnualCountIndexParameterRecorder", "pywr.recorders.AnnualCountIndexThresholdRecorder", "pywr.recorders.AnnualTotalFlowRecorder", "pywr.recorders.CSVRecorder", "pywr.recorders.DeficitFrequencyNodeRecorder", "pywr.recorders.FlowDurationCurveDeviationRecorder", "pywr.recorders.FlowDurationCurveRecorder", "pywr.recorders.GaussianKDEStorageRecorder", "pywr.recorders.HydropowerRecorder", "pywr.recorders.IndexParameterRecorder", "pywr.recorders.MeanFlowNodeRecorder", "pywr.recorders.MeanParameterRecorder", "pywr.recorders.MinimumThresholdVolumeStorageRecorder", "pywr.recorders.MinimumVolumeStorageRecorder", "pywr.recorders.NodeRecorder", "pywr.recorders.NormalisedGaussianKDEStorageRecorder", "pywr.recorders.NumpyArrayAreaRecorder", "pywr.recorders.NumpyArrayDailyProfileParameterRecorder", "pywr.recorders.NumpyArrayIndexParameterRecorder", "pywr.recorders.NumpyArrayLevelRecorder", "pywr.recorders.NumpyArrayNodeCurtailmentRatioRecorder", "pywr.recorders.NumpyArrayNodeDeficitRecorder", "pywr.recorders.NumpyArrayNodeRecorder", "pywr.recorders.NumpyArrayNodeSuppliedRatioRecorder", "pywr.recorders.NumpyArrayParameterRecorder", "pywr.recorders.NumpyArrayStorageRecorder", "pywr.recorders.ParameterRecorder", "pywr.recorders.Recorder", "pywr.recorders.RollingMeanFlowNodeRecorder", "pywr.recorders.RollingWindowParameterRecorder", "pywr.recorders.SeasonalFlowDurationCurveRecorder", "pywr.recorders.StorageDurationCurveRecorder", "pywr.recorders.StorageRecorder", "pywr.recorders.TablesRecorder", "pywr.recorders.TimestepCountIndexParameterRecorder", "pywr.recorders.TotalDeficitNodeRecorder", "pywr.recorders.TotalFlowNodeRecorder", "pywr.recorders.TotalHydroEnergyRecorder", "pywr.recorders.TotalParameterRecorder", "Pywr reference documentation.", "Core classes", "Nodes", "Notebook Utilities", "Optimisation", "Parameters", "Recorders", "Solvers", "Utilities", "Aggregated nodes", "Aggregated parameters", "Dynamic behaviour and control curves", "Pywr cookbook examples", "Using external data", "Demand restrictions", "GLPK error handling and performance", "Extending Pywr with custom Nodes", "Extending Pywr with custom Parameters", "Extending Pywr with custom Recorders", "Extending Pywr", "Problem formulation", "Welcome to Pywr\u2019s documentation!", "Installing Pywr", "JSON model format", "License", "Tutorial"], "terms": {"class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 135, 136, 144, 145, 147, 149, 151], "model": [0, 1, 2, 5, 8, 9, 10, 11, 13, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 97, 98, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 132, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 149, 152, 153], "name": [0, 8, 9, 10, 11, 13, 14, 17, 19, 20, 22, 23, 25, 26, 71, 78, 88, 90, 91, 98, 100, 103, 115, 116, 117, 121, 122, 127, 135, 137, 138, 141, 142, 144, 145, 151, 153], "int": [0, 2, 3, 12, 14, 18, 19, 23, 24, 41, 43, 45, 68, 71, 78, 79, 85, 89, 90, 92, 96, 104, 117, 118, 123, 135], "size": [0, 32, 33, 36, 37, 75, 122], "1": [0, 3, 8, 13, 18, 19, 22, 23, 25, 27, 30, 34, 35, 43, 47, 54, 68, 69, 70, 79, 84, 85, 86, 96, 97, 100, 101, 104, 109, 111, 112, 114, 116, 126, 127, 136, 137, 138, 141, 142, 144, 145, 149, 151, 152, 153], "slice": [0, 1, 122], "none": [0, 9, 10, 15, 19, 21, 27, 28, 29, 41, 47, 50, 51, 52, 53, 57, 68, 71, 78, 84, 85, 90, 92, 94, 96, 97, 98, 103, 104, 115, 116, 117, 121, 122, 126, 135, 144], "ensemble_nam": 0, "repres": [0, 1, 2, 5, 22, 24, 40, 47, 57, 79, 84, 86, 96, 104, 127, 142, 144, 145, 151], "typic": [0, 5, 139, 144], "us": [0, 1, 2, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 41, 42, 43, 44, 46, 47, 49, 50, 52, 53, 54, 57, 64, 68, 71, 75, 76, 78, 79, 81, 82, 84, 85, 86, 87, 88, 90, 92, 94, 95, 96, 97, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 119, 120, 122, 126, 127, 131, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 147, 150, 151, 152, 153], "run": [0, 1, 18, 23, 27, 78, 97, 123, 126, 132, 134, 136, 141, 145, 150, 151, 153], "mani": [0, 75, 139, 141, 145, 147], "similar": [0, 88, 122, 150], "simultan": [0, 90], "A": [0, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 33, 36, 37, 40, 47, 68, 72, 74, 84, 85, 86, 88, 91, 92, 96, 97, 99, 104, 111, 122, 125, 126, 132, 135, 136, 137, 138, 139, 142, 144, 148, 149, 150, 151, 152], "small": [0, 30], "number": [0, 1, 3, 8, 9, 13, 14, 18, 19, 22, 23, 25, 45, 68, 71, 72, 74, 75, 79, 84, 89, 90, 96, 104, 117, 123, 137, 145, 151], "paramet": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 87, 88, 90, 91, 92, 94, 95, 96, 97, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 126, 127, 128, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 147, 149], "object": [0, 1, 5, 8, 9, 10, 11, 13, 14, 17, 19, 20, 22, 57, 68, 72, 74, 78, 82, 84, 85, 87, 92, 122, 132, 135, 141, 147, 151], "return": [0, 5, 10, 11, 27, 30, 34, 38, 39, 41, 43, 45, 46, 47, 49, 54, 57, 58, 59, 63, 64, 66, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 83, 84, 85, 86, 87, 93, 94, 96, 97, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 126, 127, 132, 138, 142, 144, 145, 151], "differ": [0, 47, 57, 72, 73, 74, 75, 85, 87, 88, 94, 95, 97, 110, 119, 120, 124, 126, 139, 141, 144, 145, 151], "valu": [0, 4, 12, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 92, 94, 95, 97, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 122, 126, 127, 136, 138, 140, 141, 142, 143, 144, 145, 151], "depend": [0, 27, 38, 39, 63, 66, 69, 77, 86, 138, 140, 142, 149], "multipl": [0, 6, 8, 22, 25, 32, 58, 59, 75, 83, 85, 87, 90, 122, 128, 136, 137, 139, 141, 145, 151], "can": [0, 1, 5, 9, 10, 11, 13, 24, 25, 28, 29, 41, 42, 46, 52, 57, 75, 76, 78, 81, 82, 84, 85, 87, 88, 90, 91, 96, 97, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 122, 125, 127, 131, 134, 137, 138, 139, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153], "defin": [0, 1, 5, 25, 42, 57, 67, 68, 85, 88, 116, 122, 135, 136, 139, 141, 142, 144, 145, 151, 153], "some": [0, 116, 122, 131, 138, 139, 142, 147, 151, 153], "vari": [0, 31, 32, 33, 36, 37, 75, 136, 137, 139, 142, 144, 145, 151], "one": [0, 6, 8, 9, 19, 24, 27, 28, 29, 38, 39, 44, 63, 66, 68, 69, 77, 79, 85, 88, 90, 106, 109, 138, 139, 141, 142, 144, 150, 151], "anoth": [0, 9, 19, 44, 51, 52, 55, 56, 62, 64, 141, 144, 151], "ar": [0, 1, 2, 4, 5, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 31, 33, 36, 37, 40, 49, 68, 75, 81, 84, 85, 86, 87, 88, 94, 95, 116, 119, 120, 122, 130, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 150, 151, 153], "ensembl": [0, 1, 73, 75], "The": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 40, 41, 42, 44, 45, 46, 47, 54, 55, 56, 57, 62, 64, 67, 68, 70, 71, 75, 76, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 122, 123, 126, 127, 131, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 150, 151, 153], "instanc": [0, 1, 2, 7, 10, 11, 16, 25, 47, 58, 59, 75, 83, 87, 91, 97, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 126, 134, 145, 147, 151], "attach": [0, 17, 25, 78, 82, 122, 138, 144, 145], "str": [0, 10, 11, 23, 25, 26, 28, 29, 57, 71, 87, 88, 90, 91, 92, 94, 95, 96, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 127], "option": [0, 6, 15, 16, 19, 21, 23, 25, 26, 41, 57, 68, 71, 76, 78, 82, 84, 85, 87, 88, 90, 91, 94, 95, 96, 100, 104, 115, 117, 119, 120, 122, 127, 143, 145, 150, 152], "default": [0, 1, 9, 12, 14, 15, 18, 19, 20, 21, 23, 24, 25, 27, 34, 41, 45, 46, 47, 54, 55, 56, 57, 64, 68, 70, 85, 86, 87, 90, 92, 96, 97, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 122, 126, 127, 135, 136, 143, 150, 151, 153], "i": [0, 1, 2, 3, 4, 5, 6, 8, 9, 12, 13, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 41, 42, 43, 45, 47, 49, 51, 52, 54, 55, 56, 57, 64, 67, 68, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 92, 94, 96, 97, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 122, 126, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153], "If": [0, 13, 17, 19, 23, 25, 26, 27, 41, 47, 57, 68, 71, 78, 84, 85, 86, 90, 94, 96, 97, 104, 109, 112, 116, 122, 126, 127, 136, 138, 141, 143, 145, 147, 150, 153], "given": [0, 2, 5, 14, 18, 19, 23, 25, 26, 45, 46, 47, 55, 56, 57, 58, 59, 67, 68, 72, 73, 74, 75, 76, 78, 81, 88, 97, 119, 122, 126, 138, 141, 142, 151], "thi": [0, 1, 2, 3, 6, 8, 9, 10, 11, 14, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 36, 37, 40, 41, 42, 45, 46, 47, 49, 55, 56, 57, 64, 67, 68, 71, 72, 74, 75, 76, 78, 79, 81, 85, 87, 88, 90, 92, 94, 95, 96, 97, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 119, 120, 122, 123, 126, 127, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153], "subset": [0, 85], "actual": [0, 20, 42, 47, 94, 110, 142, 144, 151], "larg": [0, 78, 141], "certain": [0, 22], "analysi": [0, 122], "e": [0, 1, 4, 6, 9, 13, 16, 19, 20, 25, 28, 29, 30, 42, 43, 85, 88, 91, 96, 99, 104, 106, 110, 111, 125, 137, 138, 139, 141, 142, 143, 144, 145, 151, 152], "g": [0, 6, 9, 16, 20, 28, 29, 42, 47, 88, 91, 96, 97, 99, 104, 106, 111, 125, 126, 138, 139, 141, 142, 143, 144, 145, 151], "optimis": [0, 34, 54, 57, 64, 68, 70, 96, 104, 106, 116, 128, 138, 149], "onli": [0, 2, 3, 6, 13, 14, 23, 24, 25, 45, 76, 88, 90, 135, 138, 141, 142, 145, 150, 151], "done": [0, 144, 150], "iter": [0, 8, 9, 10, 11, 19, 22, 27, 28, 29, 33, 36, 37, 40, 49, 57, 58, 59, 67, 68, 72, 74, 75, 81, 82, 83, 84, 85, 87, 92, 122, 141], "user": [0, 1, 2, 5, 19, 68, 88, 96, 104, 122, 130, 141, 143, 145, 147, 151], "describ": [0, 13, 142, 151], "each": [0, 2, 4, 12, 18, 19, 22, 23, 24, 43, 47, 57, 68, 72, 73, 74, 75, 81, 84, 85, 86, 90, 91, 94, 95, 97, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 120, 122, 123, 126, 139, 141, 142, 144, 145, 148, 151], "scenariocollect": [0, 2, 128], "scenarioindex": [0, 1, 3, 128, 145], "__init__": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 144, 145, 151], "arg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 132, 135, 144], "kwarg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 135, 136, 144, 145], "method": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 144, 145, 151, 153], "attribut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 137, 142, 144, 145], "collect": [1, 28, 29, 87, 150], "scenario": [1, 2, 3, 14, 31, 32, 33, 36, 37, 41, 45, 72, 73, 74, 75, 78, 87, 88, 90, 91, 92, 94, 95, 96, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 119, 120, 122, 123, 126, 128, 139, 153], "hold": [1, 16, 145], "control": [1, 5, 75, 82, 83, 84, 85, 86, 128, 138, 140, 141, 142, 145, 149], "which": [1, 10, 11, 12, 17, 18, 19, 20, 25, 28, 29, 30, 32, 49, 52, 57, 68, 72, 74, 75, 79, 83, 85, 88, 90, 92, 94, 96, 104, 135, 138, 139, 141, 143, 144, 145, 150, 151, 153], "combin": [1, 2, 42, 90, 91, 106, 122, 128, 137, 142, 143, 145], "dure": [1, 2, 19, 23, 24, 42, 64, 68, 100, 101, 102, 106, 110, 116, 126, 127, 136, 139, 141, 142, 150], "execut": 1, "By": [1, 57, 85, 87, 96, 104, 122], "product": [1, 28, 29, 47, 88, 97, 126, 140, 142], "all": [1, 14, 17, 20, 28, 31, 45, 82, 92, 96, 104, 116, 122, 133, 134, 135, 136, 137, 140, 141, 144, 145, 150, 153], "possibl": [1, 142, 143, 145, 150, 151], "howev": [1, 10, 11, 16, 143], "set": [1, 14, 23, 25, 28, 29, 47, 116, 135, 144, 145, 150, 153], "individu": [1, 32, 137, 138], "restrict": [1, 138, 140, 149], "from": [1, 3, 8, 9, 14, 19, 20, 21, 23, 26, 27, 28, 29, 30, 32, 46, 47, 53, 67, 68, 76, 78, 79, 81, 85, 87, 90, 91, 92, 94, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 122, 126, 133, 134, 135, 137, 139, 141, 143, 144, 145, 149, 151, 153], "altern": [1, 42, 150, 151], "mai": [1, 6, 19, 84, 86, 106, 141, 142, 143, 145, 150, 151], "provid": [1, 5, 14, 19, 20, 25, 40, 46, 48, 50, 53, 57, 71, 72, 73, 74, 76, 79, 87, 88, 90, 91, 94, 99, 100, 111, 116, 122, 125, 127, 139, 144, 145, 147, 150, 151], "an": [1, 2, 4, 9, 10, 11, 14, 17, 19, 20, 22, 23, 30, 31, 32, 33, 34, 36, 37, 40, 48, 49, 54, 57, 58, 59, 68, 70, 76, 79, 82, 83, 85, 87, 89, 92, 94, 95, 96, 97, 100, 104, 106, 107, 116, 119, 120, 122, 123, 127, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 150, 151, 153], "arrai": [1, 2, 31, 32, 40, 49, 57, 67, 68, 72, 74, 78, 86, 88, 94, 95, 97, 119, 120, 122, 128, 135, 142, 145], "specif": [1, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 122, 137, 142, 145, 147, 150, 151], "indic": [1, 2, 24, 85, 122], "should": [1, 10, 11, 16, 20, 33, 36, 37, 47, 57, 67, 68, 72, 74, 81, 84, 85, 86, 88, 97, 119, 126, 135, 138, 139, 141, 143, 150, 151, 152], "latter": [1, 88], "approach": [1, 139, 150], "take": [1, 41, 55, 56, 60, 61, 62, 78, 87], "preced": 1, "over": [1, 23, 52, 72, 74, 87, 88, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "former": 1, "per": [1, 8, 9, 32, 47, 72, 73, 74, 87, 97, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 126, 145], "global_id": [2, 145], "index": [2, 3, 27, 28, 31, 32, 33, 41, 48, 49, 58, 59, 78, 83, 85, 92, 94, 122, 123, 128, 138, 142, 145], "simul": [2, 3, 75, 96, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 127, 136, 139, 143, 152], "It": [2, 8, 13, 29, 42, 47, 75, 79, 92, 96, 97, 104, 122, 126, 139, 141, 143, 144, 145, 149, 150, 151], "allow": [2, 23, 26, 85, 87, 90, 137, 145], "them": [2, 144], "alter": 2, "calcul": [2, 17, 23, 30, 42, 43, 46, 47, 49, 53, 67, 68, 71, 76, 81, 91, 94, 95, 97, 99, 109, 110, 111, 112, 116, 117, 119, 120, 125, 126, 141, 142, 145], "base": [2, 3, 20, 23, 27, 33, 43, 48, 49, 57, 58, 59, 68, 75, 82, 115, 116, 128, 132, 135, 136, 142, 144, 145, 147], "gener": [2, 15, 21, 25, 47, 50, 53, 81, 85, 143, 145, 149, 152], "unlik": [2, 88, 144], "need": [2, 25, 94, 138, 141, 144, 145, 150, 151, 153], "instanti": [2, 130], "read": [2, 3, 78, 141, 145], "global": [2, 3], "refer": [2, 3, 8, 9, 19, 68, 88, 122, 137, 138, 139, 141, 145, 149, 151], "np": [2, 35, 57, 64, 68, 138, 145], "period": [3, 14, 18, 23, 24, 30, 90, 151], "doubl": [3, 27, 47, 67, 97, 116, 126, 145, 151], "dai": [3, 12, 14, 23, 24, 27, 30, 45, 47, 57, 58, 68, 71, 79, 80, 90, 97, 106, 117, 122, 126, 127, 145, 151, 153], "represent": [3, 144], "time": [3, 23, 25, 26, 31, 32, 33, 36, 37, 46, 47, 50, 57, 88, 90, 96, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 122, 123, 127, 135, 137, 141, 142, 143, 144, 145, 151], "step": [3, 19, 22, 23, 25, 26, 46, 47, 50, 57, 87, 101, 105, 107, 108, 109, 110, 111, 112, 113, 114, 122, 127, 135, 144], "panda": [3, 41, 141, 150, 153], "length": [3, 8, 9, 19, 30, 33, 36, 37, 45, 57, 68, 72, 74, 81, 84, 85, 86, 94, 127], "dayofyear": 3, "year": [3, 12, 18, 24, 30, 39, 43, 68, 79, 80, 89, 90, 91, 106, 122, 139, 142, 151], "dayofyear_index": 3, "zero": [3, 13, 17, 19, 22, 42, 47, 52, 67, 68, 79, 85, 94, 101, 104, 109, 112, 138, 143, 144, 145, 153], "begin": [3, 57, 142, 148], "0": [3, 6, 9, 12, 14, 15, 16, 18, 21, 22, 24, 25, 27, 34, 35, 41, 43, 45, 46, 47, 54, 55, 56, 57, 64, 67, 68, 70, 71, 78, 79, 84, 85, 86, 88, 92, 94, 95, 96, 97, 100, 101, 104, 109, 111, 112, 114, 116, 119, 120, 126, 127, 137, 138, 141, 142, 144, 145, 148, 151, 152, 153], "end": [3, 79, 90, 96, 104, 122, 136, 142, 148, 151, 153], "366": [3, 40, 72, 79], "29th": 3, "februari": 3, "skip": 3, "leap": [3, 30], "month": [3, 12, 18, 24, 32, 57, 79, 90, 119, 122, 142, 145], "week_index": 3, "week": [3, 80, 141], "last": [3, 19, 41, 57, 78, 80, 84, 86, 106, 118, 141, 151, 153], "51": [3, 152], "alwai": [3, 68, 141], "slightli": [3, 144], "longer": 3, "than": [3, 8, 9, 17, 19, 23, 47, 67, 80, 85, 89, 101, 116, 136, 137, 141, 142, 145, 150, 151, 153], "7": [3, 80, 138, 150, 151], "12": [3, 12, 24, 32, 57, 79, 141, 145, 151, 153], "is_leap_year": 3, "bool": [3, 12, 18, 24, 27, 76, 96, 104, 114, 116, 122, 127, 135, 136], "true": [3, 27, 85, 96, 104, 122, 136, 141, 143, 144, 151], "current": [3, 10, 11, 23, 26, 34, 38, 39, 43, 46, 49, 53, 54, 57, 70, 76, 77, 82, 85, 86, 135, 139, 141, 145, 151], "fals": [3, 12, 18, 24, 27, 58, 59, 65, 76, 114, 116, 127, 135, 136], "otherwis": [3, 27, 57, 68, 90, 101, 145, 151], "hydrolog": 4, "suppli": [4, 16, 22, 25, 88, 90, 112, 142, 144, 148, 151, 153], "water": [4, 23, 26, 47, 97, 126, 137, 142, 144, 152], "network": [4, 6, 8, 9, 10, 11, 15, 16, 21, 25, 131, 135, 144, 149, 153], "initialis": [4, 6, 7, 8, 9, 13, 14, 15, 16, 17, 19, 20, 21, 22, 145], "new": [4, 6, 7, 8, 9, 13, 14, 15, 16, 17, 19, 20, 21, 22, 106, 143, 144], "node": [4, 5, 6, 8, 9, 42, 45, 46, 47, 50, 53, 58, 63, 71, 76, 77, 78, 79, 81, 82, 84, 85, 86, 91, 92, 94, 95, 97, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 114, 117, 119, 120, 121, 122, 124, 125, 126, 128, 135, 138, 139, 140, 141, 142, 143, 145, 147, 149, 153], "input": [4, 13, 14, 22, 25, 50, 53, 81, 137, 138, 143, 144, 147, 151, 153], "fix": [4, 8, 17, 19, 22, 137, 141], "inflow": [4, 23, 25, 26, 138, 144], "min_flow": [4, 13, 15, 21, 47, 137, 144], "max_flow": [4, 6, 9, 13, 15, 16, 19, 21, 22, 25, 42, 47, 93, 109, 110, 112, 124, 137, 141, 142, 144, 145, 151, 153], "same": [4, 22, 30, 33, 36, 37, 57, 68, 73, 85, 87, 94, 116, 138, 145], "specifi": [4, 14, 23, 24, 25, 26, 45, 84, 85, 90, 96, 104, 119, 137, 141, 142, 150, 151], "flow": [4, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 19, 21, 22, 23, 25, 26, 42, 45, 46, 47, 50, 58, 63, 71, 91, 94, 95, 97, 99, 105, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119, 120, 122, 124, 125, 126, 128, 138, 139, 140, 141, 144, 145, 151, 153], "keyword": [4, 5, 50, 52, 53, 57, 68, 88, 92, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 122, 127, 141, 143, 151], "overrid": 4, "ani": [4, 14, 15, 17, 21, 24, 25, 28, 45, 46, 71, 76, 84, 86, 90, 101, 116, 137, 140, 143, 152, 153], "argument": [4, 49, 50, 52, 53, 68, 88, 90, 92, 94, 95, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 120, 122, 127, 141, 143, 145, 150, 151], "float": [4, 6, 7, 8, 9, 13, 14, 15, 16, 17, 21, 23, 25, 26, 30, 34, 43, 45, 46, 47, 49, 54, 55, 56, 57, 58, 59, 62, 64, 68, 70, 71, 83, 84, 85, 86, 96, 97, 100, 111, 116, 126, 127, 136, 145], "function": [4, 5, 6, 16, 19, 22, 28, 29, 30, 34, 54, 67, 68, 70, 87, 88, 94, 95, 96, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 119, 120, 128, 131, 140, 141, 145, 147, 150], "amount": [4, 141, 145], "timestep": [4, 5, 14, 23, 27, 31, 32, 38, 39, 41, 42, 45, 46, 71, 76, 78, 90, 93, 97, 117, 118, 122, 123, 128, 139, 141, 142, 144, 148, 151, 153], "curv": [5, 75, 82, 83, 84, 85, 86, 94, 95, 119, 120, 128, 138, 140, 142, 145, 149], "subclass": [5, 133, 134, 135, 144], "storag": [5, 11, 12, 13, 18, 23, 24, 26, 53, 76, 77, 81, 82, 83, 84, 85, 86, 96, 101, 102, 104, 105, 108, 114, 120, 140, 142, 144], "addit": [5, 8, 9, 19, 68, 88, 92, 140, 143, 144, 150, 151], "simpl": [5, 8, 15, 21, 128, 144, 151], "ha": [5, 17, 46, 90, 91, 97, 136, 141, 142, 143, 144, 145, 150, 151, 153], "above_curve_cost": 5, "when": [5, 8, 9, 18, 19, 22, 24, 34, 54, 57, 64, 68, 70, 85, 87, 88, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 122, 123, 136, 137, 138, 139, 141, 142, 145, 150, 151, 152], "abov": [5, 9, 13, 19, 85, 94, 138, 141, 145, 149, 150], "its": [5, 17, 19, 24, 34, 46, 54, 68, 70, 76, 138, 141, 144], "cost": [5, 7, 9, 13, 19, 22, 23, 25, 26, 84, 91, 99, 111, 125, 137, 141, 142, 143, 144, 151, 153], "below": [5, 84, 85, 94, 96, 101, 104, 122, 137, 138, 139, 141, 142, 144, 145, 150, 151], "neg": [5, 23, 25, 26, 41, 60, 61, 62, 68, 78, 138], "benefit": [5, 13, 22, 25, 144, 147, 153], "fill": 5, "control_curv": [5, 142], "posit": [5, 23, 25, 26, 27, 30, 34, 41, 68, 70, 78, 85, 86, 94, 138], "percentag": [5, 17, 82, 85], "have": [6, 27, 42, 46, 71, 76, 80, 94, 122, 135, 136, 141, 143, 145, 147, 151, 152, 153], "upstream": [6, 144], "confluenc": 6, "downstream": [6, 8, 144], "link": [6, 13, 19, 22, 141, 144, 145, 151], "maximum": [6, 12, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 54, 55, 60, 68, 70, 86, 138, 140, 144, 151, 153], "constraint": [6, 15, 16, 21, 24, 116, 136, 137, 139, 151, 153], "5": [6, 16, 84, 88, 137, 138, 141, 142], "gaug": [7, 9, 151], "station": 7, "minimum": [7, 9, 15, 19, 21, 23, 25, 26, 47, 56, 61, 68, 86, 96, 102, 104, 136, 137, 138, 144, 151, 153], "residu": [7, 9, 79, 151], "mrf": [7, 9, 151], "mrf_cost": [7, 9, 151], "rout": [7, 8, 9, 13, 22, 122, 135], "via": [7, 9, 13, 96, 104, 137, 138, 141, 143, 145, 147], "other": [7, 9, 10, 11, 19, 20, 25, 27, 42, 46, 76, 87, 116, 128, 137, 138, 140, 143, 144, 147, 151], "unconstrain": [7, 9, 19], "split": [8, 9, 19], "specialis": [8, 147], "version": [8, 23, 55, 56, 64, 141, 145, 149, 150, 152], "multisplitlink": [8, 9], "more": [8, 9, 19, 55, 56, 64, 68, 80, 84, 85, 86, 106, 137, 138, 139, 142, 144, 145, 151, 152], "conveni": [8, 151], "init": 8, "intend": [8, 22, 42, 47, 79, 90, 116, 149], "case": [8, 9, 27, 52, 141, 143, 144, 150], "where": [8, 9, 22, 23, 42, 47, 55, 56, 64, 78, 89, 90, 101, 122, 137, 141, 142, 144, 151], "ratio": [8, 9, 19, 109, 112, 140, 144], "requir": [8, 9, 19, 23, 25, 26, 47, 78, 88, 96, 104, 135, 137, 138, 141, 144, 145, 150, 151], "distribut": [8, 96, 104, 150, 152], "factor": [8, 9, 19, 23, 26, 32, 43, 47, 49, 91, 97, 99, 100, 111, 125, 126, 127, 135, 137, 142, 153], "forc": [8, 9], "extra_slot": [8, 9, 19], "assum": [8, 9, 23, 57, 67, 90], "less": [8, 9, 23, 47, 101, 116, 136, 137, 145, 153], "document": [8, 9, 12, 68, 88, 138, 139, 141, 142, 145, 147, 153], "slot_nam": [8, 9, 19, 144], "identifi": [8, 9, 144], "slot": [8, 9, 19, 151], "connect": [8, 9, 10, 11, 13, 14, 16, 19, 20, 22, 25, 137, 144, 151, 153], "must": [8, 9, 17, 19, 28, 29, 30, 40, 57, 75, 85, 88, 90, 94, 95, 116, 119, 120, 136, 137, 141, 145, 150, 151], "extra": [8, 9, 19], "nstep": [8, 19, 22], "belong": [8, 9, 13, 14, 17, 19, 20, 22, 142], "string": [8, 9, 13, 14, 17, 19, 20, 22, 27, 57, 78, 88, 122, 141, 151], "uniqu": [8, 9, 13, 14, 17, 19, 20, 22], "As": [9, 141, 145, 150, 151, 153], "riversplit": 9, "creat": [9, 16, 25, 57, 96, 104, 116, 122, 138, 139, 143, 144, 145, 147, 150, 151, 153], "underli": 9, "part": [9, 75, 145], "intent": 9, "proport": [9, 17, 19, 23, 25, 26, 76, 96, 114], "abstract": [9, 20, 137], "90": [9, 142], "x0": [9, 19], "xo": [9, 19], "x1": [9, 19], "xi": [9, 19], "c": [9, 13, 19, 137, 143, 145, 148, 150, 152], "x2": [9, 19], "bo": [9, 19], "bi": [9, 19], "d": [9, 13, 19, 137, 142], "ag": 9, "aggreg": [10, 11, 28, 29, 87, 94, 95, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 119, 120, 135, 140, 142, 144, 145, 149], "sum": [10, 11, 28, 29, 87, 88, 127, 137, 140, 145], "behav": [10, 11, 25, 27, 28, 29, 88, 138], "like": [10, 11, 19, 22, 25, 27, 28, 29, 57, 68, 138, 143, 151], "within": [10, 11, 24, 33, 36, 37, 90, 122, 139, 143, 153], "list": [10, 11, 19, 22, 23, 26, 28, 29, 84, 85, 86, 90, 91, 94, 135, 141, 142, 145, 150, 151], "total": [10, 11, 19, 40, 47, 87, 91, 97, 99, 111, 124, 125, 126, 127, 137, 145], "note": [10, 11, 13, 19, 22, 23, 26, 27, 42, 46, 47, 49, 76, 85, 97, 109, 110, 112, 126, 137, 141, 150], "flow_weight": 10, "volum": [11, 12, 13, 18, 23, 24, 25, 26, 53, 76, 77, 79, 81, 82, 84, 85, 96, 101, 102, 104, 114, 139, 142, 144, 145, 151], "current_pc": 11, "storage_nod": [11, 76, 82, 83, 84, 85, 86, 142], "virtual": [12, 18, 23, 24, 26], "reset": [12, 18, 24, 68, 79, 81, 135, 141], "annual": [12, 30, 40, 72, 74, 79, 96, 104, 106, 128, 142], "licenc": [12, 23, 24, 79, 137, 145], "see": [12, 16, 23, 26, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 122, 139, 141, 145, 150, 151, 152, 153], "core": [12, 23, 26, 58, 63, 66, 71, 77, 87, 90, 91, 94, 95, 100, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 123, 127, 128, 135, 145, 147, 149, 150, 151, 153], "virtualstorag": 12, "reset_dai": [12, 24, 79], "31": [12, 24, 79, 151, 153], "initi": [12, 14, 18, 23, 24, 25, 26, 45, 71, 79, 144, 145, 151], "reset_month": [12, 24, 79], "reset_to_initial_volum": [12, 18, 24], "instead": [12, 14, 18, 22, 23, 24, 25, 45, 57, 88, 116, 137, 141, 145, 150, 151], "compound": [13, 22, 144], "reduc": [13, 79, 142], "In": [13, 16, 25, 27, 68, 84, 85, 137, 139, 141, 142, 143, 144, 145, 147, 150, 151, 153], "form": [13, 142, 147], "3": [13, 47, 84, 97, 126, 137, 141, 150, 151, 152, 153], "b": [13, 137, 145, 148], "output": [13, 14, 17, 22, 25, 34, 90, 91, 122, 137, 138, 141, 142, 143, 144, 151, 153], "f": [13, 30, 137, 141, 151], "bottleneck": 13, "x": [13, 50, 51, 52, 53, 67, 138, 145, 148, 149], "9": [13, 92, 141, 142, 151], "6": [13, 47, 54, 97, 126, 153], "x_o": 13, "x_i": 13, "d_o": 13, "e_o": 13, "f_o": 13, "compos": [13, 144], "place": [13, 150], "normal": [13, 25, 142], "situat": [13, 22, 24], "result": [13, 87, 88, 90, 106, 134, 136, 137, 143, 145, 153], "lp": [13, 150], "easier": 13, "solv": [13, 135, 144, 145, 148, 150], "delai": [14, 45], "composit": 14, "consist": [14, 40, 68], "intern": [14, 17, 19, 25, 34, 40, 54, 70, 71, 85, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 143, 144], "flowdelayparamet": 14, "prior": [14, 19, 23, 45, 96, 104, 143], "being": [14, 45, 84, 96, 104, 106, 142, 147], "valid": [14, 23, 34, 45, 54, 70, 141, 153], "exactli": [14, 45, 145], "divis": [14, 45], "delta": [14, 47, 97, 126], "initial_flow": [14, 45, 71], "avail": [14, 41, 45, 78, 138, 141, 144, 145, 150], "constant": [14, 31, 34, 36, 37, 45, 55, 56, 60, 61, 64, 138, 142, 145, 151], "across": [14, 19, 23, 24, 31, 45, 68, 75, 87, 88, 91, 94, 95, 119, 120, 122], "point": [15, 21, 23, 50, 52, 53, 96, 104], "pipe": [16, 144], "between": [16, 19, 24, 47, 57, 75, 76, 84, 86, 94, 97, 110, 124, 126, 136, 137, 142, 145, 151], "edg": [16, 135, 137, 145, 149, 153], "disconnect": [16, 137], "cannot": [16, 145], "loss": 17, "through": [17, 19, 25, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 139, 144, 153], "sent": 17, "max": [17, 23, 28, 29, 88, 116, 140], "min": [17, 28, 29, 88, 116, 140], "appli": [17, 23, 24, 41, 57, 64, 68, 78, 88, 91, 100, 127, 137, 141, 142, 151], "enforc": [17, 19, 24, 137], "net": [17, 25, 138], "after": [17, 18, 41, 42, 45, 78, 97, 136, 144], "itself": [17, 47, 97, 126, 141], "record": [17, 25, 27, 42, 47, 63, 66, 69, 71, 77, 128, 136, 139, 144, 147, 149, 153], "would": [17, 137, 143, 144], "loss_factor": 17, "lost": 17, "greater": [17, 19, 67, 89], "equal": [17, 19, 23, 43, 51, 52, 68, 72, 74, 75, 81, 89, 101, 116, 137, 144, 153], "gross": 17, "initial_month": 18, "start": [18, 24, 67, 85, 90, 122, 145, 150, 151, 153], "extens": [19, 22, 96, 104, 141, 150], "piecewiselink": [19, 144], "includ": [19, 90, 122, 137, 138, 139, 143, 145, 147, 150, 151, 152, 153], "conceptu": 19, "look": [19, 41, 78, 141, 144], "follow": [19, 47, 54, 70, 97, 126, 134, 138, 141, 142, 145, 150, 152], "sublink": [19, 22], "ad": [19, 28, 29, 137, 143, 145], "final": [19, 88, 106, 136, 142, 153], "mechan": [19, 85], "non": [19, 22, 30, 68, 75, 106, 138, 150], "aggregatednod": [19, 137, 144], "monoton": [19, 22, 67], "increas": [19, 22, 25, 67], "piec": [19, 22], "wise": [19, 22], "correspond": [19, 22, 57, 68, 84, 85, 88, 136, 142, 150, 151], "rang": [19, 34, 54, 70, 85, 90, 94, 95, 119, 120], "first": [19, 23, 25, 26, 27, 41, 46, 57, 68, 71, 78, 84, 85, 86, 87, 88, 122, 145, 150, 151, 153], "item": [19, 85, 122, 151], "pass": [19, 50, 52, 53, 84, 85, 86, 92, 122, 141, 144, 145, 150, 151], "particular": [19, 47, 101, 152], "normalis": [19, 104], "solver": [19, 42, 128, 143, 149, 150], "care": 19, "constrain": [19, 116, 140, 144], "whole": [19, 80], "expect": [19, 141, 142, 151], "inherit": [20, 135, 145], "basenod": [20, 153], "type": [20, 75, 81, 85, 137, 138, 141, 142, 144, 145, 147, 151, 153], "storageinput": 20, "directli": [20, 22, 25, 88, 141, 151], "linear": [22, 100, 127, 135, 143, 144, 145, 148, 150], "rate": [22, 43, 47, 54, 97, 126, 144], "beyond": [22, 145], "limit": [22, 81, 153], "chang": [22, 23, 25, 57, 139, 145], "implement": [22, 23, 135, 139, 145], "structur": [22, 144, 145, 147, 149], "so": [22, 85, 86, 123, 142, 144, 145, 150, 153], "separ": [22, 57, 122, 141], "domain": [22, 130], "sub": [22, 25, 88, 144, 147], "n": [22, 30, 71, 117, 118], "mean": [22, 29, 30, 42, 71, 87, 88, 99, 100, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 140, 141, 142], "do": [22, 75, 144, 147, 153], "travers": 22, "due": [22, 137], "middl": 22, "sever": [22, 106, 135, 142, 144, 150], "made": [22, 138, 139, 151], "reason": 22, "break": 22, "avoid": [22, 145, 151], "geometr": 22, "present": [22, 141], "roll": 23, "updat": [23, 139, 141, 145], "utilis": [23, 75, 79], "immedi": 23, "occur": [23, 47, 143, 153], "replenish": 23, "until": [23, 86, 136], "full": [23, 84, 122, 142, 145], "complet": [23, 97], "At": [23, 84, 142], "previou": [23, 27, 46, 50, 58, 63, 71, 117, 141, 145], "behaviour": [23, 73, 137, 143, 144, 145], "up": [23, 41, 78, 138, 150], "17": [23, 149, 151], "wa": [23, 42, 46, 76, 138, 141, 150], "meant": 23, "imposs": 23, "higher": 23, "even": [23, 145, 152], "lower": [23, 47, 52, 57, 64, 68, 86, 94, 96, 104, 116, 136, 142], "out": [23, 41, 78, 144], "affect": [23, 26], "multipli": [23, 26, 127, 142], "remov": [23, 26, 28, 29, 144, 145, 150, 153], "min_volum": [23, 25, 26, 151], "reach": [23, 26, 136, 143], "max_volum": [23, 25, 26, 84, 85, 151], "initial_volum": [23, 25, 26, 84, 151], "initial_volume_pc": [23, 25, 26], "either": [23, 25, 26, 57, 81, 88, 116, 137, 143, 150, 152], "absolut": [23, 25, 26, 76, 114], "term": [23, 25, 26, 143, 152], "both": [23, 25, 26, 85, 87, 90, 116, 137, 138, 141, 145, 150, 151], "becaus": [23, 25, 26, 139, 144, 153], "evalu": [23, 25, 26, 27, 42, 138, 141, 145], "ignor": [23, 25, 26, 71, 116], "daili": [23, 40, 57, 68, 72, 81, 106, 123, 141, 142, 151, 153], "frequenc": [23, 93, 96, 104], "outfrom": [23, 26], "todo": [23, 26], "properti": [23, 26, 90, 91, 116, 132, 135, 144, 151, 153], "respect": [23, 25, 26, 68, 84, 116, 137, 142, 143, 145, 150], "issu": [23, 26], "242": [23, 26], "oper": [24, 91, 99, 111, 125, 138, 139], "most": [24, 47, 139, 141, 144, 151], "end_dai": 24, "end_month": 24, "stop": 24, "For": [24, 25, 75, 81, 87, 90, 91, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 138, 139, 141, 144, 145, 147, 151], "remain": [24, 68, 145], "unchang": 24, "doe": [24, 42, 78, 97, 126, 135, 137, 138, 141, 143, 144], "date": [24, 90, 141, 151], "earlier": [24, 143], "boundari": [24, 68, 139, 141, 144], "exampl": [24, 25, 49, 75, 84, 87, 88, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 137, 138, 139, 142, 144, 145, 147, 149, 150, 151], "activ": [24, 34, 54, 70, 128], "octob": 24, "march": 24, "april": 24, "septemb": 24, "explicit": 25, "about": [25, 151, 153], "thei": [25, 84, 86, 116, 138, 139, 143], "reservoir": [25, 84, 138, 139, 142, 145], "num_output": [25, 151], "num_input": [25, 151], "2": [25, 30, 84, 137, 141, 142, 145, 151], "demand1": [25, 141], "from_slot": 25, "demand2": [25, 141], "attribtu": 25, "modifi": [25, 145, 150, 152], "independ": [25, 68, 139], "15": 25, "integ": [25, 68, 85, 88, 138, 142], "penalis": 25, "give": [25, 42, 47, 97, 126, 142], "releas": [25, 139, 150], "decreas": 25, "area": [25, 105], "level": [25, 49, 85, 108, 132, 141, 142, 151], "These": [25, 40, 46, 76, 81, 84, 85, 86, 87, 88, 116, 139, 143, 144, 145, 147, 150], "access": [25, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 134, 141, 145, 153], "get_area": 25, "get_level": 25, "unit": [26, 47, 97, 126, 150], "outflow": [26, 144], "threshold": [27, 55, 56, 58, 59, 60, 61, 69, 89, 90, 101, 123, 128, 138], "predic": 27, "ratchet": 27, "two": [27, 38, 39, 63, 66, 67, 69, 77, 86, 88, 137, 138, 141, 142, 143, 144, 145, 151, 153], "state": [27, 139, 142], "compar": [27, 55, 56, 62, 64, 84, 86, 90, 94, 123, 138, 139, 143], "zeroth": [27, 30, 42], "One": [27, 147], "lt": 27, "gt": 27, "eq": 27, "le": 27, "ge": [27, 148], "onc": [27, 90, 141, 142, 145, 151], "trigger": [27, 150], "stai": 27, "On": 27, "scenario_index": [27, 92, 145], "els": [27, 144, 151], "agg_func": [28, 29, 87, 94, 95, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 119, 120, 138, 142], "indexparamet": [28, 29, 36, 49, 89, 90, 98, 107, 123, 138, 142], "Its": 28, "": [28, 29, 42, 46, 50, 68, 75, 82, 84, 85, 86, 109, 112, 116, 138, 139, 141, 142, 143, 144, 145, 150, 151, 153], "child": [28, 29, 75, 138, 145], "callabl": [28, 29, 87, 88, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116], "accept": [28, 29, 88], "amplitud": 30, "phase": 30, "harmon": 30, "seri": [30, 41, 96, 104], "compris": 30, "cosin": 30, "365": [30, 80], "perform": [30, 87, 88, 135, 136, 149], "julien": 30, "minu": [30, 109], "caus": [30, 68, 88, 143], "discontinu": 30, "t": [30, 144, 145, 148, 153], "sum_": 30, "a_n": 30, "cdot": 30, "co": 30, "pi": 30, "nt": 30, "phi_n": 30, "array_lik": [30, 50, 52, 53, 57, 68, 85], "shift": [30, 68], "baselin": [32, 138, 142], "timeseri": [32, 41, 105, 107, 108, 109, 110, 111, 112, 113, 114, 126, 138], "data": [32, 41, 50, 52, 53, 75, 78, 90, 91, 92, 96, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 122, 134, 135, 140, 143, 144, 145, 147, 149, 151, 153], "perturb": 32, "taken": [32, 150], "shape": [32, 90, 91], "therefor": [32, 78, 88, 96, 104, 141, 142], "singl": [33, 36, 37, 55, 56, 64, 75, 82, 96, 104, 137, 138], "lower_bound": [34, 35, 54, 57, 64, 68, 70, 85], "upper_bound": [34, 35, 54, 57, 64, 68, 70, 85], "variabl": [34, 54, 68, 70, 85, 132, 143, 150], "inf": [35, 57, 64, 68], "scale": [35, 91, 99, 100, 111, 125, 127], "offset": [35, 41, 64, 78], "ordin": 38, "profil": [40, 57, 68, 72, 73, 74, 79, 80, 81, 106, 128, 138, 139, 142, 145, 151], "repeat": [40, 68, 72, 74, 136, 151], "resolut": [40, 72, 74], "coerc": 40, "numpi": [40, 88, 94, 95, 119, 120, 128, 138, 150], "datafram": [41, 97, 128, 141, 145, 151], "timestep_offset": [41, 78], "automat": [41, 141, 144, 145, 150], "align": [41, 78, 148], "resampl": [41, 78, 96, 104, 141], "_core": [41, 145], "forward": [41, 78], "backward": [41, 78], "dataset": [41, 78, 141], "bound": [41, 47, 54, 57, 64, 67, 68, 70, 78, 85, 96, 104, 116, 132, 136], "track": [42, 46, 76, 100, 115, 127, 141], "deficit": [42, 110, 128], "littl": [42, 143], "unusu": 42, "calc_valu": 42, "numpyarraynoderecord": [42, 109, 110, 112, 153], "request": [42, 147, 150], "you": [42, 141, 145, 147, 150, 152], "yesterdai": 42, "base_year": 43, "discount": 43, "discount_r": 43, "express": 43, "numer": [44, 119, 141], "denomin": 44, "divid": 44, "divisor": 44, "dividend": 44, "initial_valu": [46, 69], "befor": [46, 71, 96, 104, 134, 141, 143, 144, 150], "past": 46, "keep": [46, 150], "though": [46, 76, 81], "target": [47, 79, 94, 96], "water_elevation_paramet": [47, 97, 126], "turbine_elev": [47, 97, 126], "effici": [47, 55, 56, 64, 81, 97, 126, 142], "densiti": [47, 96, 97, 104, 126], "1000": [47, 97, 126, 151], "min_head": 47, "flow_unit_convers": [47, 97, 126], "energy_unit_convers": [47, 97, 126], "1e": [47, 97, 126], "hydropow": [47, 97, 126, 128], "turbin": [47, 97, 126], "energi": [47, 97, 126], "elev": [47, 97, 126], "enter": [47, 97, 126], "work": [47, 97, 126, 137, 141, 142, 145, 150, 151], "head": [47, 97, 126], "upper": [47, 52, 54, 57, 64, 68, 70, 86, 94, 96, 104, 116, 136], "least": [47, 150], "water_elev": [47, 97, 126], "transform": [47, 97, 126], "compat": [47, 97, 126], "equat": [47, 97, 126, 142], "here": [47, 97, 126], "convert": [47, 49, 71, 84, 86, 97, 126, 145], "m": [47, 97, 126], "mj": [47, 97, 126], "totalhydroenergyrecord": [47, 97], "hydropowerrecord": [47, 126], "invers": 47, "q": [47, 97, 126], "frac": 47, "p": [47, 97, 126, 142], "rho": [47, 97, 126], "h": [47, 97, 126, 145, 152], "those": [47, 68], "simpli": [47, 97, 126], "indexedarrayparamet": 48, "controlcurveindexparamet": [48, 142], "index_paramet": [49, 142], "param": [49, 66, 89, 98, 100, 106, 107, 113, 115, 118, 127, 142], "demand": [49, 137, 138, 139, 140, 144, 148, 149, 151, 153], "save": [49, 92, 97, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 122, 126, 141, 144], "constantparamet": [49, 81, 84, 85, 86, 138, 145], "interp_kwarg": [50, 51, 52, 53], "interpol": [50, 51, 52, 53, 57, 68, 75, 84, 86, 128], "calucul": 50, "coordin": [50, 52, 53], "y": [50, 51, 52, 53, 67, 145], "dict": [50, 52, 53, 68, 88, 122], "dictionari": [50, 52, 53, 68, 88], "scipi": [50, 52, 53, 68, 88, 150], "interp1d": [50, 52, 53], "upper_paramet": 52, "lower_paramet": 52, "quadratur": 52, "interv": [52, 54, 153], "integr": [52, 67, 127], "file": [53, 78, 92, 94, 122, 128, 141, 150, 151], "max_output": [54, 70], "growth_rat": 54, "logist": 54, "growth": 54, "steep": 54, "aggregatedparamet": [55, 56, 64, 138, 142, 145], "interp_dai": 57, "monthli": [57, 73, 142, 151], "piecewis": [57, 67], "linearli": [57, 84, 86], "everi": [57, 68, 79, 122, 135, 145], "undertaken": [57, 68, 116, 136], "scenariomonthlyprofileparamet": 57, "arrayindexedscenariomonthlyfactorsparamet": [57, 73], "use_max_flow": [58, 59], "against": [58, 59, 90, 94, 139], "abstractnod": [58, 63, 66, 94, 95, 103, 111, 119], "is_vari": [65, 85], "right": 67, "hand": [67, 151], "days_of_year": 68, "rbf_kwarg": 68, "variable_days_of_year_rang": 68, "min_valu": 68, "max_valu": 68, "radial": 68, "basi": [68, 87], "rbf": 68, "comput": [68, 88, 96, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "alongsid": 68, "366th": 68, "second": [68, 72, 74, 78, 85, 86, 122], "penultim": 68, "mirror": 68, "encourag": 68, "gradient": 68, "appear": [68, 144], "pleas": [68, 88, 152], "inform": [68, 107, 111, 113, 114, 116, 122, 139, 140, 151, 153], "expos": 68, "except": [68, 73, 122, 135, 142, 143, 145, 151], "cap": 68, "infin": 68, "min_output": 70, "ramp": 70, "been": [71, 143, 144, 145, 150, 153], "member": [72, 74], "1st": [72, 74, 90, 151], "dimens": [72, 74, 88, 94], "monthlyprofileparamet": [73, 81, 84, 86, 145], "weekli": [74, 80, 141], "52": [74, 80], "switch": [75, 76, 142], "awar": 75, "explicitli": [75, 145, 153], "support": [75, 88, 94, 95, 119, 120, 140], "test": [75, 143, 149, 151], "definit": [75, 88, 116, 137, 141], "select": 75, "use_proportional_volum": 76, "abstractstorag": [76, 77, 82, 120, 121], "boolean": 76, "h5file": [78, 122], "pytabl": [78, 141, 150], "hdf": [78, 122], "databas": [78, 122], "interfac": [78, 143], "load": [78, 94, 141, 143, 144, 145, 149, 153], "entir": [78, 143], "memori": [78, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 134, 145], "tabl": [78, 122, 140], "filenam": [78, 122, 135, 141], "handl": [78, 122, 138, 149], "carrai": [78, 122], "open": [78, 122, 141], "close": [78, 122], "path": [78, 92, 122, 150, 151], "residual_dai": 79, "uniformli": 79, "annualvirtualstorag": 79, "perfect": 79, "averag": [79, 81], "subsequ": 79, "afterward": 79, "weight": 81, "pair": [81, 86, 151], "contribut": 81, "dailyprofileparamet": [81, 84, 86], "reli": 82, "contain": [82, 88, 122, 131, 135, 139, 144, 151], "queri": [82, 85, 145], "holder": 83, "three": [84, 137, 138, 141, 142, 144, 151], "100": [84, 85, 94, 95, 96, 119, 120, 137, 141, 153], "often": [84, 86, 139, 141, 142, 151], "len": [84, 86, 145], "relat": [84, 142], "50": [84, 137, 142, 151], "30": [84, 137, 141, 150], "10": [84, 137, 141, 142, 151, 152, 153], "20": [84, 137, 141, 151], "cc": 84, "variable_indic": 85, "multi": 85, "rel": [85, 122, 151], "predefin": 85, "sequenc": 85, "increment": 85, "thereof": [85, 122, 144], "cast": 85, "descend": [85, 133, 134], "order": [85, 94, 139, 141, 142, 145, 151, 153], "wai": [85, 139, 141, 144, 145, 150], "consid": [85, 86, 144, 147, 152], "self": [85, 109, 110, 112, 135, 144, 145, 151], "basecontrolcurveparamet": 85, "next": [86, 144, 153], "2d": [86, 88], "bottom": 86, "top": [86, 142], "produc": [87, 96, 104, 141], "complex": [87, 137, 138, 139, 143, 144, 145], "unaggreg": 87, "recorder_agg_func": 87, "undertak": 87, "aggregated_valu": [87, 96, 104, 116], "call": [87, 116, 138, 143, 145, 151], "func": [88, 138], "util": [88, 128, 149], "etc": [88, 139], "custom": [88, 140, 142, 143, 147], "median": [88, 105, 107, 108, 109, 110, 111, 112, 113, 114, 140], "count_nonzero": 88, "map": 88, "kei": [88, 139, 141, 151], "aforement": 88, "percentil": [88, 94, 95, 119, 120, 138], "percentileofscor": 88, "score": 88, "1d": 88, "axi": [88, 94, 95, 119, 120], "determin": [88, 116, 141, 142], "fashion": [88, 147], "95": [88, 142], "kind": [88, 138, 141], "rank": 88, "unicod": [90, 91], "count": [90, 123], "exce": [90, 123, 137, 153], "also": [90, 122, 137, 139, 141, 145, 150, 151], "exclus": 90, "inclus": 90, "calendar": 90, "exceed": 90, "intersect": 90, "exclud": 90, "exclude_month": 90, "include_from_month": 90, "include_from_dai": 90, "jan": [90, 141], "include_to_month": 90, "include_to_dai": 90, "31st": [90, 151], "dec": [90, 141], "csvfile": 92, "complib": 92, "complevel": 92, "csv": [92, 151], "packag": [92, 149], "python": [92, 135, 138, 141, 142, 143, 145, 147, 149, 150, 151, 152], "standard": [92, 150], "librari": [92, 145, 147, 150], "writer": 92, "failur": [93, 142], "meet": 93, "lower_target_fdc": 94, "upper_target_fdc": 94, "durat": [94, 95, 119, 120, 128], "fdc": [94, 95, 119, 120], "deviat": 94, "2nd": 94, "high": 94, "low": 94, "fall": [94, 101], "extern": [94, 116, 140, 145, 149, 150, 151], "style": [94, 95, 119, 120], "fdc_agg_func": [94, 95, 119], "fit": [96, 104, 132, 152], "kde": [96, 104], "numpyarraystoragerecord": 96, "kernel": [96, 104], "estim": [96, 104], "probabl": [96, 104], "flatten": [96, 104], "pdf": [96, 104, 142], "to_datafram": [96, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "reflect": [96, 104], "bounded": [96, 104], "disabl": [96, 104, 116], "resample_freq": [96, 104], "resample_func": [96, 104], "target_volume_pc": 96, "num_pdf": [96, 104], "101": [96, 104], "use_reflect": [96, 104], "whether": [96, 101, 104, 114, 116, 127, 138], "account": [96, 104], "power": [97, 126, 128], "hydrpow": 97, "hydropowertargetparamet": [97, 126], "numpyarraynormalisedstoragerecord": 104, "store": [105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 122, 134, 141, 144, 145], "view": [105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 135], "temporal_agg_func": [105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "encount": 106, "rbfprofileparamet": 106, "might": [106, 141], "With": 106, "easili": 106, "curtail": 109, "numpyarraynodedeficitrecord": [109, 111, 112], "numpyarraynodesuppliedratiorecord": [109, 110, 111], "curtailment_ratio": 109, "actual_flow": [109, 110, 112], "numpyarraynodecurtailmentratiorecord": [110, 111, 112], "alloc": [110, 135, 139, 145, 149], "supply_ratio": 112, "ignore_nan": 116, "is_object": 116, "epsilon": [116, 136], "constraint_lower_bound": 116, "constraint_upper_bound": 116, "compon": [116, 138, 142, 151], "basic": [116, 140, 144, 147, 151], "comment": 116, "descript": [116, 151], "flag": [116, 150], "nan": [116, 143], "maxim": [116, 148], "maximis": 116, "minim": [116, 143, 145, 149], "minimis": 116, "denot": 116, "direct": [116, 145, 151], "distanc": 116, "algorithm": [116, 136, 141], "mark": 116, "is_constraint": 116, "strictli": 116, "wrapper": [116, 135], "tool": 116, "problem": [116, 135, 145, 149, 151, 153], "rollingmeanflownodeparamet": 117, "window": [118, 149], "season": 119, "sdc_agg_func": 120, "routes_flow": 122, "constructor": 122, "statist": [122, 128], "metadata": [122, 149, 153], "row": [122, 135], "tupl": 122, "prefer": [122, 151], "insid": [122, 151], "filter_kwd": 122, "filter": 122, "open_fil": 122, "mode": [122, 150], "w": 122, "root": 122, "_v_attr": 122, "create_directori": 122, "attempt": [122, 143, 148], "make": [122, 144], "intermedi": [122, 151], "directori": [122, 150, 151], "o": [122, 149], "makedir": 122, "underneath": 122, "rather": [126, 141, 142, 150], "flux": 127, "summat": 127, "submodul": 128, "platypu": 128, "pygmo": 128, "modul": [128, 131, 141, 145, 151], "content": [128, 149, 151], "hdf5": [128, 141], "hydro": 128, "cython_glpk": 128, "cython_lpsolv": 128, "notebook": [128, 149], "bisect": 128, "search": [128, 151], "river": [130, 144, 151], "visualis": 131, "pywr": [131, 133, 134, 139, 141, 142, 143, 148, 151, 152, 153], "juyter": 131, "pygmowrapp": 132, "pywr_model_json": 132, "baseoptimisationwrapp": 132, "solut": [132, 136, 137, 150], "get_bound": 132, "get_nec": 132, "get_nic": 132, "get_nobj": 132, "helper": [132, 135], "customise_model": 132, "make_model": 132, "model_constraint": 132, "model_object": 132, "model_variable_map": 132, "model_vari": 132, "modelcach": 132, "cache_constraint": 132, "cache_object": 132, "cache_variable_paramet": 132, "clear_global_model_cach": 132, "clear": 132, "cach": [132, 135], "common": [133, 134, 138, 139, 141, 142, 144, 151], "destroi": 134, "abstractnodedata": 135, "id": 135, "in_edg": 135, "is_link": 135, "out_edg": 135, "aggnodefactordata": 135, "ind_ptr": 135, "memoryview": 135, "ind": 135, "node_ind": 135, "val": 135, "basismanag": 135, "cythonglpkedgesolv": 135, "use_presolv": 135, "time_limit": 135, "iteration_limit": 135, "message_level": 135, "error": [135, 136, 144, 145, 149], "save_routes_flow": 135, "retry_solv": 135, "glpksolver": 135, "route_flows_arr": 135, "setup": [135, 138, 141, 150], "stat": 135, "cythonglpksolv": 135, "glpkerror": [135, 143], "glpkinternalerror": [135, 143], "set_fixed_flows_onc": 135, "set_fixed_costs_onc": 135, "set_fixed_factors_onc": 135, "use_unsafe_api": [135, 143], "dump_glpk": 135, "dump_lp": 135, "dump_mp": 135, "set_solver_opt": 135, "baseclass": 135, "programm": [135, 143, 144, 145, 148], "glpk": [135, 149, 150, 151], "lpsolve55": 135, "cython": [135, 150], "get": [135, 145, 150, 151, 153], "metaclass": [135, 144], "magic": 135, "routes_flows_arrai": 135, "nullsolv": 135, "null": 135, "routin": 135, "mainli": 135, "debug": [135, 143, 149], "purpos": [135, 145, 152], "bisectionsearchmodel": 136, "find": 136, "largest": 136, "satisfi": [136, 137, 153], "proce": 136, "gap": 136, "best": 136, "feasibl": 136, "re": [136, 141, 142, 143], "ensur": [136, 137, 143, 145], "found": [136, 138, 151], "rais": [136, 141, 143, 144, 145, 151], "bisect_paramet": 136, "process": [136, 141, 143], "double_s": 136, "bisect_epsilon": 136, "termin": 136, "criterion": 136, "narrow": 136, "error_on_infeas": 136, "valueerror": [136, 151], "special": [137, 144, 150], "group": [137, 138], "possibli": 137, "conform": 137, "blend": 137, "sourc": [137, 141, 142, 149], "40": 137, "despit": 137, "There": [137, 138, 144, 145, 150, 151], "regardless": 137, "referenc": [137, 141, 144, 151], "liter": 137, "scheme": 137, "licens": [137, 149], "60": 137, "could": [137, 138, 143, 144, 145, 153], "hard": 137, "sometim": [137, 151], "unintend": 137, "aggregatedindexparamet": 138, "children": [138, 145], "while": [138, 145, 153], "januari": [138, 151], "8": [138, 141, 142], "4": [138, 141, 151], "monthlyparamet": 138, "agg": 138, "json": [138, 141, 144, 145, 149, 153], "section": [138, 139, 141, 142, 147, 151, 152, 153], "104": 138, "monthly_demand_profil": 138, "demand_saving_factor": 138, "build": [138, 143, 150], "detail": [138, 151, 152], "explan": [138, 145], "equival": [138, 142, 145], "truthi": 138, "api": [138, 149, 151], "25th": 138, "lambda": [138, 141], "25": [138, 141], "shorter": 138, "arguabl": 138, "readabl": 138, "quicker": 138, "another_paramet": 138, "gain": 138, "evapor": 138, "leakag": [138, 144], "origin": 138, "achiev": [138, 141], "shown": [138, 141, 143], "pattern": 138, "enough": 138, "warrant": 138, "creation": 138, "negativemax": 138, "import": [139, 141, 144, 145, 150, 151, 153], "applic": [139, 141], "parameteris": 139, "rule": [139, 144], "we": [139, 144, 153], "discuss": [139, 151], "strategi": 139, "veri": [139, 141, 143, 145, 153], "resourc": [139, 142, 144, 149, 152], "said": [139, 145], "advantag": 139, "condit": [139, 141], "Such": 139, "capabl": 139, "respond": 139, "futur": [139, 145], "few": [139, 145], "system": [139, 141, 142, 144], "progress": 139, "tbc": [139, 146], "extend": [139, 149], "format": [140, 144, 145, 149, 153], "usag": 140, "maxparamet": 140, "minparamet": 140, "negativeparamet": 140, "negativemaxparamet": 140, "concept": [140, 142], "practic": [141, 145], "desir": 141, "particularli": 141, "better": 141, "tabular": 141, "url": [141, 151], "comma": [141, 151], "excel": 141, "xl": 141, "xlsx": 141, "h5": 141, "warn": 141, "formula": 141, "recommend": [141, 143, 150], "superior": 141, "speed": 141, "to_hdf": 141, "critic": 141, "advis": 141, "tablesarrayparamet": 141, "fast": [141, 149], "indirectli": 141, "appropri": [141, 151], "read_xxx": 141, "read_excel": 141, "recognis": 141, "pars": [141, 151], "timestamp": 141, "parse_d": [141, 151], "comparison": 141, "git": [141, 150], "suitabl": 141, "binari": [141, 149], "obtain": 141, "revis": 141, "becom": 141, "problemat": 141, "To": [141, 142, 144, 145, 150], "address": 141, "dataframeparamet": 141, "show": [141, 145], "how": [141, 142, 153], "local": 141, "match": [141, 145], "hashmismatcherror": 141, "hashlib": 141, "usual": [141, 142, 145], "suffici": [141, 144, 151], "timeseries2": 141, "md5": 141, "a5c4032e2d8f5205ca99dedcfa4cd18": 141, "sha256": 141, "0f75b3cee325d37112687d3d10596f44e0add374f4e40a1b6687912c05e65366": 141, "author": [141, 151], "add": [141, 144, 145, 150, 153], "script": [141, 150], "rb": 141, "block": 141, "8192": 141, "print": [141, 151, 153], "hexdigest": 141, "catchment": [141, 144], "column": [141, 151], "rainfal": 141, "1910": 141, "01": [141, 151, 153], "23": [141, 151], "920": 141, "02": 141, "22": 141, "140": 141, "03": 141, "570": 141, "index_col": [141, 151], "still": [141, 150, 153], "subsampl": 141, "go": 141, "theme": 141, "popul": 141, "citi": 141, "real": [141, 143], "oxford": 141, "294": 141, "cambridg": 141, "28": 141, "403": 141, "19": [141, 152], "london": 141, "790": 141, "930": 141, "520": 141, "lookup": 141, "max_flow_oxford": 141, "plu": 141, "feb": 141, "mar": 141, "43": 141, "32": 141, "24": 141, "21": 141, "11": 141, "14": 141, "34": 141, "13": 141, "monthlyprofil": [141, 142, 151], "200": [141, 151], "dc1": 141, "reload": 141, "disk": 141, "although": [141, 150], "previous": 141, "oxford_demand": 141, "simple_data": 141, "cambridge_demand": 141, "poor": 142, "impos": 142, "likelihood": 142, "d_": 142, "code": [142, 150, 151], "snippet": 142, "demand_baselin": 142, "throughout": 142, "august": 142, "2x": 142, "rest": [142, 144], "9x": 142, "hat": 142, "illustr": [142, 144], "demand_profil": 142, "png": 142, "hire": 142, "l1": 142, "perhap": 142, "just": [142, 145], "public": [142, 152], "l2": 142, "decim": 142, "strateg": 142, "implicitli": 142, "l0": 142, "central": 142, "80": 142, "commonli": 142, "complic": [142, 151], "summer": 142, "winter": 142, "demand_restriction_level": 142, "controlcurveindex": 142, "level1": 142, "level2": 142, "reduct": 142, "elsewher": 142, "further": [142, 153], "75": 142, "demand_restriction_factor": 142, "indexedarrai": 142, "understand": 142, "help": 142, "demand_factor": 142, "demand_max_flow": 142, "figur": 142, "500": 142, "ok": 142, "share": 142, "translat": [143, 151], "sensibl": 143, "check": [143, 153], "uncheck": 143, "sinc": 143, "v1": 143, "enabl": 143, "caught": 143, "gracefulli": 143, "invalid": 143, "environ": [143, 150], "difficult": 143, "recov": 143, "ideal": 143, "catch": 143, "continu": 143, "runtim": [143, 145, 150], "benchmark": 143, "random": 143, "world": 143, "context": 143, "without": [143, 144, 145, 152], "pywr_solver_glpk_unsafe_api": 143, "assertionerror": 143, "segment": 143, "fault": 143, "major": 144, "categori": 144, "exist": [144, 145, 147], "featur": 144, "characteris": 144, "abil": 144, "fundament": [144, 151], "fourth": 144, "balanc": [144, 148], "carri": 144, "manag": [144, 150], "arrang": 144, "out_1": 144, "receiv": [144, 152, 153], "in_1": 144, "convei": 144, "parallel": 144, "lnk_1": 144, "lnk_n": 144, "let": [144, 153], "leaki": 144, "leak": 144, "flaw": 144, "proportion": 144, "leakypip": 144, "def": [144, 145], "leakage_cost": 144, "99999": 144, "allow_isol": 144, "super": [144, 145], "parent": [144, 145], "iter_slot": 144, "is_connector": 144, "yield": 144, "_after_": 144, "commit_al": 144, "sure": 144, "classmethod": [144, 145], "cl": [144, 145], "del": 144, "pop": [144, 145], "regist": [144, 145], "leaky_pipe_model": 144, "sjon": 144, "doesn": [144, 153], "advanc": 144, "treatment": 144, "write": [145, 147, 151, 152], "minimim": 145, "dynam": 145, "_valu": 145, "whenev": 145, "myparamet": 145, "overload": 145, "word": 145, "123": 145, "element": 145, "dataclass": 145, "rememb": 145, "good": [145, 150], "mind": 145, "aren": 145, "rewrit": 145, "anyth": [145, 153], "simplist": 145, "finit": 145, "licenceparamet": 145, "total_volum": 145, "num_scenario": 145, "_volume_remain": 145, "empti": [145, 153], "float64": 145, "timestepp": [145, 149, 153], "flow_during_timestep": 145, "_node": 145, "dirti": 145, "realloc": 145, "tree": 145, "correct": [145, 150], "circular": 145, "terminologi": 145, "get_valu": 145, "get_index": 145, "manual": [145, 150], "load_paramet": 145, "nest": 145, "simplifi": 145, "sumparamet": 145, "total_valu": 145, "parameter_data": 145, "indirect": 145, "unabl": 145, "resolv": 145, "signific": 145, "written": [145, 149, 150], "too": 145, "tutori": [145, 149], "scope": 145, "easiest": [145, 150], "compil": [145, 150], "pyximport": 145, "command": [145, 150], "pyx": 145, "foreign": 145, "py": [145, 150, 151], "linker": 145, "demonstr": [145, 151], "pow": 145, "libm": 145, "cimport": 145, "statement": 145, "_paramet": 145, "cpdef": 145, "signatur": 145, "custom_paramet": 145, "cdef": 145, "math": 145, "squaredparamet": 145, "run_model": 145, "instal": [145, 149], "design": 147, "orient": 147, "much": 147, "own": 147, "project": [147, 150], "guidanc": 147, "your": [147, 150, 152], "potenti": 147, "pull": [147, 150], "frame": 148, "text": [148, 152], "mathbf": 148, "mathrm": 148, "subject": 148, "leq": 148, "generalis": 149, "free": [149, 152], "wheel": 149, "pip": 149, "anaconda": 149, "linux": 149, "develop": 149, "formul": 149, "overview": 149, "syntax": 149, "footnot": 149, "older": 149, "cookbook": 149, "softwar": 149, "citat": 149, "later": [150, 152], "built": 150, "successfulli": 150, "msvc": 150, "gcc": 150, "clang": 150, "llvm": 150, "instruct": 150, "networkx": 150, "program": [150, 152], "lpsolv": 150, "xlrd": 150, "pytest": 150, "jupyt": 150, "matplotlib": 150, "plan": 150, "host": 150, "pypi": 150, "64": 150, "bit": 150, "lag": 150, "behind": 150, "configur": 150, "proceed": 150, "conda": 150, "minut": 150, "drive": 150, "forg": 150, "channel": 150, "config": 150, "want": 150, "locat": 150, "relev": 150, "batch": 150, "maco": 150, "conda_prefix": 150, "library_inc": 150, "library_lib": 150, "lib": [150, 151], "build_ext": 150, "l": 150, "inplac": 150, "blog": 150, "winglpk": 150, "yourself": 150, "prebuilt": 150, "fine": 150, "sourceforg": 150, "websit": 150, "No": 150, "sudo": 150, "apt": 150, "libgmp3": 150, "dev": 150, "libglpk": 150, "liblpsolve55": 150, "static": 150, "confus": 150, "around": 150, "rm": 150, "usr": 150, "ln": 150, "lp_solv": 150, "dyld_library_path": 150, "export": 150, "rpath": 150, "cflag": 150, "wl": 150, "header": 150, "c_include_path": 150, "seen": 150, "recip": 150, "sh": 150, "homebrew": 150, "github": 150, "http": [150, 152], "com": 150, "avaialbl": 150, "pywr_solv": 150, "travi": 150, "ci": 150, "appveyor": 150, "org": [150, 152], "admin": 150, "servic": 150, "programmat": 151, "javascript": 151, "notat": 151, "overal": 151, "folder": 151, "titl": [151, 153], "addition": 151, "john": 151, "smith": 151, "2016": 151, "decemb": 151, "scalar": 151, "subtyp": 151, "groundwat": 151, "soft": 151, "associ": 151, "teddington": 151, "rivergaug": 151, "well": 151, "wherea": 151, "big": 151, "wet": 151, "lake": 151, "700": 151, "reservoira": 151, "reservoirb": 151, "gw_flow": 151, "mrf_profil": 151, "inlin": 151, "catchment_inflow": 151, "catchmod_outputs_v2": 151, "my_model": 151, "thame": 151, "Not": 151, "try": 151, "twice": 151, "keyerror": 151, "membership": 151, "assert": 151, "sensit": 151, "white": 151, "space": 151, "quit": 151, "strict": 151, "fail": 151, "somewhat": 151, "cryptic": 151, "usefulli": 151, "line": 151, "traceback": 151, "recent": 151, "stdin": 151, "snorf": 151, "desktop": 151, "316": 151, "miniconda3": 151, "env": 151, "python3": 151, "318": 151, "_default_decod": 151, "decod": 151, "343": 151, "obj": 151, "raw_decod": 151, "idx": 151, "_w": 151, "359": 151, "scan_onc": 151, "enclos": 151, "quot": 151, "char": 151, "372": 151, "mistak": 151, "trail": 151, "fact": 151, "hierarchi": 151, "yaml": 151, "yet": 151, "markup": 151, "languag": 151, "losslessli": 151, "under": 152, "gnu": 152, "copyright": 152, "2014": 152, "joshua": 152, "arnott": 152, "jame": 152, "tomlinson": 152, "atkin": 152, "univers": 152, "manchest": 152, "redistribut": 152, "publish": 152, "foundat": 152, "hope": 152, "warranti": 152, "impli": 152, "merchant": 152, "FOR": 152, "copi": 152, "along": 152, "inc": 152, "franklin": 152, "street": 152, "fifth": 152, "floor": 152, "boston": 152, "ma": 152, "02110": 152, "1301": 152, "usa": 152, "permiss": 152, "grant": 152, "invari": 152, "front": 152, "cover": 152, "back": 152, "entitl": 152, "cite": 152, "paper": 152, "j": 152, "harou": 152, "2020": 152, "environment": 152, "doi": 152, "1016": 152, "envsoft": 152, "104635": 152, "simplest": 153, "technic": 153, "isn": 153, "interest": 153, "haven": 153, "don": 153, "miss": 153, "ve": 153, "tell": 153, "long": 153, "ll": 153, "2015": 153, "datetim": 153, "to_datetim": 153, "timedelta": 153, "captur": 153, "readi": 153, "our": 153, "parti": 153, "trivial": 153, "minimum_vers": 153, "forest": 153}, "objects": {"pywr.core": [[0, 0, 1, "", "Scenario"], [1, 0, 1, "", "ScenarioCollection"], [2, 0, 1, "", "ScenarioIndex"], [3, 0, 1, "", "Timestep"]], "pywr.core.Scenario": [[0, 1, 1, "", "__init__"]], "pywr.core.ScenarioCollection": [[1, 1, 1, "", "__init__"]], "pywr.core.ScenarioIndex": [[2, 1, 1, "", "__init__"]], "pywr.core.Timestep": [[3, 1, 1, "", "__init__"]], "pywr.domains.river": [[4, 0, 1, "", "Catchment"], [5, 0, 1, "", "Reservoir"], [6, 0, 1, "", "River"], [7, 0, 1, "", "RiverGauge"], [8, 0, 1, "", "RiverSplit"], [9, 0, 1, "", "RiverSplitWithGauge"]], "pywr.domains.river.Catchment": [[4, 1, 1, "", "__init__"]], "pywr.domains.river.Reservoir": [[5, 1, 1, "", "__init__"]], "pywr.domains.river.River": [[6, 1, 1, "", "__init__"]], "pywr.domains.river.RiverGauge": [[7, 1, 1, "", "__init__"]], "pywr.domains.river.RiverSplit": [[8, 1, 1, "", "__init__"]], "pywr.domains.river.RiverSplitWithGauge": [[9, 1, 1, "", "__init__"]], "pywr.nodes": [[10, 0, 1, "", "AggregatedNode"], [11, 0, 1, "", "AggregatedStorage"], [12, 0, 1, "", "AnnualVirtualStorage"], [13, 0, 1, "", "BreakLink"], [14, 0, 1, "", "DelayNode"], [15, 0, 1, "", "Input"], [16, 0, 1, "", "Link"], [17, 0, 1, "", "LossLink"], [18, 0, 1, "", "MonthlyVirtualStorage"], [19, 0, 1, "", "MultiSplitLink"], [20, 0, 1, "", "Node"], [21, 0, 1, "", "Output"], [22, 0, 1, "", "PiecewiseLink"], [23, 0, 1, "", "RollingVirtualStorage"], [24, 0, 1, "", "SeasonalVirtualStorage"], [25, 0, 1, "", "Storage"], [26, 0, 1, "", "VirtualStorage"]], "pywr.nodes.AggregatedNode": [[10, 1, 1, "", "__init__"]], "pywr.nodes.AggregatedStorage": [[11, 1, 1, "", "__init__"]], "pywr.nodes.AnnualVirtualStorage": [[12, 1, 1, "", "__init__"]], "pywr.nodes.BreakLink": [[13, 1, 1, "", "__init__"]], "pywr.nodes.DelayNode": [[14, 1, 1, "", "__init__"]], "pywr.nodes.Input": [[15, 1, 1, "", "__init__"]], "pywr.nodes.Link": [[16, 1, 1, "", "__init__"]], "pywr.nodes.LossLink": [[17, 1, 1, "", "__init__"]], "pywr.nodes.MonthlyVirtualStorage": [[18, 1, 1, "", "__init__"]], "pywr.nodes.MultiSplitLink": [[19, 1, 1, "", "__init__"]], "pywr.nodes.Node": [[20, 1, 1, "", "__init__"]], "pywr.nodes.Output": [[21, 1, 1, "", "__init__"]], "pywr.nodes.PiecewiseLink": [[22, 1, 1, "", "__init__"]], "pywr.nodes.RollingVirtualStorage": [[23, 1, 1, "", "__init__"]], "pywr.nodes.SeasonalVirtualStorage": [[24, 1, 1, "", "__init__"]], "pywr.nodes.Storage": [[25, 1, 1, "", "__init__"]], "pywr.nodes.VirtualStorage": [[26, 1, 1, "", "__init__"]], "pywr": [[132, 2, 0, "-", "optimisation"], [135, 2, 0, "-", "solvers"]], "pywr.optimisation": [[132, 0, 1, "", "BaseOptimisationWrapper"], [132, 0, 1, "", "ModelCache"], [132, 4, 1, "", "cache_constraints"], [132, 4, 1, "", "cache_objectives"], [132, 4, 1, "", "cache_variable_parameters"], [132, 4, 1, "", "clear_global_model_cache"], [132, 2, 0, "-", "pygmo"]], "pywr.optimisation.BaseOptimisationWrapper": [[132, 1, 1, "", "customise_model"], [132, 1, 1, "", "make_model"], [132, 3, 1, "", "model"], [132, 3, 1, "", "model_constraints"], [132, 3, 1, "", "model_objectives"], [132, 3, 1, "", "model_variable_map"], [132, 3, 1, "", "model_variables"]], "pywr.optimisation.pygmo": [[132, 0, 1, "", "PygmoWrapper"]], "pywr.optimisation.pygmo.PygmoWrapper": [[132, 1, 1, "", "fitness"], [132, 1, 1, "", "get_bounds"], [132, 1, 1, "", "get_nec"], [132, 1, 1, "", "get_nic"], [132, 1, 1, "", "get_nobj"]], "pywr.parameters": [[27, 0, 1, "", "AbstractThresholdParameter"], [28, 0, 1, "", "AggregatedIndexParameter"], [29, 0, 1, "", "AggregatedParameter"], [30, 0, 1, "", "AnnualHarmonicSeriesParameter"], [31, 0, 1, "", "ArrayIndexedParameter"], [32, 0, 1, "", "ArrayIndexedScenarioMonthlyFactorsParameter"], [33, 0, 1, "", "ArrayIndexedScenarioParameter"], [34, 0, 1, "", "BinaryStepParameter"], [35, 0, 1, "", "ConstantParameter"], [36, 0, 1, "", "ConstantScenarioIndexParameter"], [37, 0, 1, "", "ConstantScenarioParameter"], [38, 0, 1, "", "CurrentOrdinalDayThresholdParameter"], [39, 0, 1, "", "CurrentYearThresholdParameter"], [40, 0, 1, "", "DailyProfileParameter"], [41, 0, 1, "", "DataFrameParameter"], [42, 0, 1, "", "DeficitParameter"], [43, 0, 1, "", "DiscountFactorParameter"], [44, 0, 1, "", "DivisionParameter"], [45, 0, 1, "", "FlowDelayParameter"], [46, 0, 1, "", "FlowParameter"], [47, 0, 1, "", "HydropowerTargetParameter"], [48, 0, 1, "", "IndexParameter"], [49, 0, 1, "", "IndexedArrayParameter"], [50, 0, 1, "", "InterpolatedFlowParameter"], [51, 0, 1, "", "InterpolatedParameter"], [52, 0, 1, "", "InterpolatedQuadratureParameter"], [53, 0, 1, "", "InterpolatedVolumeParameter"], [54, 0, 1, "", "LogisticParameter"], [55, 0, 1, "", "MaxParameter"], [56, 0, 1, "", "MinParameter"], [57, 0, 1, "", "MonthlyProfileParameter"], [58, 0, 1, "", "MultipleThresholdIndexParameter"], [59, 0, 1, "", "MultipleThresholdParameterIndexParameter"], [60, 0, 1, "", "NegativeMaxParameter"], [61, 0, 1, "", "NegativeMinParameter"], [62, 0, 1, "", "NegativeParameter"], [63, 0, 1, "", "NodeThresholdParameter"], [64, 0, 1, "", "OffsetParameter"], [65, 0, 1, "", "Parameter"], [66, 0, 1, "", "ParameterThresholdParameter"], [67, 0, 1, "", "PiecewiseIntegralParameter"], [68, 0, 1, "", "RbfProfileParameter"], [69, 0, 1, "", "RecorderThresholdParameter"], [70, 0, 1, "", "RectifierParameter"], [71, 0, 1, "", "RollingMeanFlowNodeParameter"], [72, 0, 1, "", "ScenarioDailyProfileParameter"], [73, 0, 1, "", "ScenarioMonthlyProfileParameter"], [74, 0, 1, "", "ScenarioWeeklyProfileParameter"], [75, 0, 1, "", "ScenarioWrapperParameter"], [76, 0, 1, "", "StorageParameter"], [77, 0, 1, "", "StorageThresholdParameter"], [78, 0, 1, "", "TablesArrayParameter"], [79, 0, 1, "", "UniformDrawdownProfileParameter"], [80, 0, 1, "", "WeeklyProfileParameter"], [81, 0, 1, "", "WeightedAverageProfileParameter"]], "pywr.parameters.AbstractThresholdParameter": [[27, 1, 1, "", "__init__"]], "pywr.parameters.AggregatedIndexParameter": [[28, 1, 1, "", "__init__"]], "pywr.parameters.AggregatedParameter": [[29, 1, 1, "", "__init__"]], "pywr.parameters.AnnualHarmonicSeriesParameter": [[30, 1, 1, "", "__init__"]], "pywr.parameters.ArrayIndexedParameter": [[31, 1, 1, "", "__init__"]], "pywr.parameters.ArrayIndexedScenarioMonthlyFactorsParameter": [[32, 1, 1, "", "__init__"]], "pywr.parameters.ArrayIndexedScenarioParameter": [[33, 1, 1, "", "__init__"]], "pywr.parameters.BinaryStepParameter": [[34, 1, 1, "", "__init__"]], "pywr.parameters.ConstantParameter": [[35, 1, 1, "", "__init__"]], "pywr.parameters.ConstantScenarioIndexParameter": [[36, 1, 1, "", "__init__"]], "pywr.parameters.ConstantScenarioParameter": [[37, 1, 1, "", "__init__"]], "pywr.parameters.CurrentOrdinalDayThresholdParameter": [[38, 1, 1, "", "__init__"]], "pywr.parameters.CurrentYearThresholdParameter": [[39, 1, 1, "", "__init__"]], "pywr.parameters.DailyProfileParameter": [[40, 1, 1, "", "__init__"]], "pywr.parameters.DataFrameParameter": [[41, 1, 1, "", "__init__"]], "pywr.parameters.DeficitParameter": [[42, 1, 1, "", "__init__"]], "pywr.parameters.DiscountFactorParameter": [[43, 1, 1, "", "__init__"]], "pywr.parameters.DivisionParameter": [[44, 1, 1, "", "__init__"]], "pywr.parameters.FlowDelayParameter": [[45, 1, 1, "", "__init__"]], "pywr.parameters.FlowParameter": [[46, 1, 1, "", "__init__"]], "pywr.parameters.HydropowerTargetParameter": [[47, 1, 1, "", "__init__"]], "pywr.parameters.IndexParameter": [[48, 1, 1, "", "__init__"]], "pywr.parameters.IndexedArrayParameter": [[49, 1, 1, "", "__init__"]], "pywr.parameters.InterpolatedFlowParameter": [[50, 1, 1, "", "__init__"]], "pywr.parameters.InterpolatedParameter": [[51, 1, 1, "", "__init__"]], "pywr.parameters.InterpolatedQuadratureParameter": [[52, 1, 1, "", "__init__"]], "pywr.parameters.InterpolatedVolumeParameter": [[53, 1, 1, "", "__init__"]], "pywr.parameters.LogisticParameter": [[54, 1, 1, "", "__init__"]], "pywr.parameters.MaxParameter": [[55, 1, 1, "", "__init__"]], "pywr.parameters.MinParameter": [[56, 1, 1, "", "__init__"]], "pywr.parameters.MonthlyProfileParameter": [[57, 1, 1, "", "__init__"]], "pywr.parameters.MultipleThresholdIndexParameter": [[58, 1, 1, "", "__init__"]], "pywr.parameters.MultipleThresholdParameterIndexParameter": [[59, 1, 1, "", "__init__"]], "pywr.parameters.NegativeMaxParameter": [[60, 1, 1, "", "__init__"]], "pywr.parameters.NegativeMinParameter": [[61, 1, 1, "", "__init__"]], "pywr.parameters.NegativeParameter": [[62, 1, 1, "", "__init__"]], "pywr.parameters.NodeThresholdParameter": [[63, 1, 1, "", "__init__"]], "pywr.parameters.OffsetParameter": [[64, 1, 1, "", "__init__"]], "pywr.parameters.Parameter": [[65, 1, 1, "", "__init__"]], "pywr.parameters.ParameterThresholdParameter": [[66, 1, 1, "", "__init__"]], "pywr.parameters.PiecewiseIntegralParameter": [[67, 1, 1, "", "__init__"]], "pywr.parameters.RbfProfileParameter": [[68, 1, 1, "", "__init__"]], "pywr.parameters.RecorderThresholdParameter": [[69, 1, 1, "", "__init__"]], "pywr.parameters.RectifierParameter": [[70, 1, 1, "", "__init__"]], "pywr.parameters.RollingMeanFlowNodeParameter": [[71, 1, 1, "", "__init__"]], "pywr.parameters.ScenarioDailyProfileParameter": [[72, 1, 1, "", "__init__"]], "pywr.parameters.ScenarioMonthlyProfileParameter": [[73, 1, 1, "", "__init__"]], "pywr.parameters.ScenarioWeeklyProfileParameter": [[74, 1, 1, "", "__init__"]], "pywr.parameters.ScenarioWrapperParameter": [[75, 1, 1, "", "__init__"]], "pywr.parameters.StorageParameter": [[76, 1, 1, "", "__init__"]], "pywr.parameters.StorageThresholdParameter": [[77, 1, 1, "", "__init__"]], "pywr.parameters.TablesArrayParameter": [[78, 1, 1, "", "__init__"]], "pywr.parameters.UniformDrawdownProfileParameter": [[79, 1, 1, "", "__init__"]], "pywr.parameters.WeeklyProfileParameter": [[80, 1, 1, "", "__init__"]], "pywr.parameters.WeightedAverageProfileParameter": [[81, 1, 1, "", "__init__"]], "pywr.parameters.control_curves": [[82, 0, 1, "", "BaseControlCurveParameter"], [83, 0, 1, "", "ControlCurveIndexParameter"], [84, 0, 1, "", "ControlCurveInterpolatedParameter"], [85, 0, 1, "", "ControlCurveParameter"], [86, 0, 1, "", "ControlCurvePiecewiseInterpolatedParameter"]], "pywr.parameters.control_curves.BaseControlCurveParameter": [[82, 1, 1, "", "__init__"]], "pywr.parameters.control_curves.ControlCurveIndexParameter": [[83, 1, 1, "", "__init__"]], "pywr.parameters.control_curves.ControlCurveInterpolatedParameter": [[84, 1, 1, "", "__init__"]], "pywr.parameters.control_curves.ControlCurveParameter": [[85, 1, 1, "", "__init__"]], "pywr.parameters.control_curves.ControlCurvePiecewiseInterpolatedParameter": [[86, 1, 1, "", "__init__"]], "pywr.recorders": [[87, 0, 1, "", "AggregatedRecorder"], [88, 0, 1, "", "Aggregator"], [89, 0, 1, "", "AnnualCountIndexParameterRecorder"], [90, 0, 1, "", "AnnualCountIndexThresholdRecorder"], [91, 0, 1, "", "AnnualTotalFlowRecorder"], [92, 0, 1, "", "CSVRecorder"], [93, 0, 1, "", "DeficitFrequencyNodeRecorder"], [94, 0, 1, "", "FlowDurationCurveDeviationRecorder"], [95, 0, 1, "", "FlowDurationCurveRecorder"], [96, 0, 1, "", "GaussianKDEStorageRecorder"], [97, 0, 1, "", "HydropowerRecorder"], [98, 0, 1, "", "IndexParameterRecorder"], [99, 0, 1, "", "MeanFlowNodeRecorder"], [100, 0, 1, "", "MeanParameterRecorder"], [101, 0, 1, "", "MinimumThresholdVolumeStorageRecorder"], [102, 0, 1, "", "MinimumVolumeStorageRecorder"], [103, 0, 1, "", "NodeRecorder"], [104, 0, 1, "", "NormalisedGaussianKDEStorageRecorder"], [105, 0, 1, "", "NumpyArrayAreaRecorder"], [106, 0, 1, "", "NumpyArrayDailyProfileParameterRecorder"], [107, 0, 1, "", "NumpyArrayIndexParameterRecorder"], [108, 0, 1, "", "NumpyArrayLevelRecorder"], [109, 0, 1, "", "NumpyArrayNodeCurtailmentRatioRecorder"], [110, 0, 1, "", "NumpyArrayNodeDeficitRecorder"], [111, 0, 1, "", "NumpyArrayNodeRecorder"], [112, 0, 1, "", "NumpyArrayNodeSuppliedRatioRecorder"], [113, 0, 1, "", "NumpyArrayParameterRecorder"], [114, 0, 1, "", "NumpyArrayStorageRecorder"], [115, 0, 1, "", "ParameterRecorder"], [116, 0, 1, "", "Recorder"], [117, 0, 1, "", "RollingMeanFlowNodeRecorder"], [118, 0, 1, "", "RollingWindowParameterRecorder"], [119, 0, 1, "", "SeasonalFlowDurationCurveRecorder"], [120, 0, 1, "", "StorageDurationCurveRecorder"], [121, 0, 1, "", "StorageRecorder"], [122, 0, 1, "", "TablesRecorder"], [123, 0, 1, "", "TimestepCountIndexParameterRecorder"], [124, 0, 1, "", "TotalDeficitNodeRecorder"], [125, 0, 1, "", "TotalFlowNodeRecorder"], [126, 0, 1, "", "TotalHydroEnergyRecorder"], [127, 0, 1, "", "TotalParameterRecorder"]], "pywr.recorders.AggregatedRecorder": [[87, 1, 1, "", "__init__"]], "pywr.recorders.Aggregator": [[88, 1, 1, "", "__init__"]], "pywr.recorders.AnnualCountIndexParameterRecorder": [[89, 1, 1, "", "__init__"]], "pywr.recorders.AnnualCountIndexThresholdRecorder": [[90, 1, 1, "", "__init__"]], "pywr.recorders.AnnualTotalFlowRecorder": [[91, 1, 1, "", "__init__"]], "pywr.recorders.CSVRecorder": [[92, 1, 1, "", "__init__"]], "pywr.recorders.DeficitFrequencyNodeRecorder": [[93, 1, 1, "", "__init__"]], "pywr.recorders.FlowDurationCurveDeviationRecorder": [[94, 1, 1, "", "__init__"]], "pywr.recorders.FlowDurationCurveRecorder": [[95, 1, 1, "", "__init__"]], "pywr.recorders.GaussianKDEStorageRecorder": [[96, 1, 1, "", "__init__"]], "pywr.recorders.HydropowerRecorder": [[97, 1, 1, "", "__init__"]], "pywr.recorders.IndexParameterRecorder": [[98, 1, 1, "", "__init__"]], "pywr.recorders.MeanFlowNodeRecorder": [[99, 1, 1, "", "__init__"]], "pywr.recorders.MeanParameterRecorder": [[100, 1, 1, "", "__init__"]], "pywr.recorders.MinimumThresholdVolumeStorageRecorder": [[101, 1, 1, "", "__init__"]], "pywr.recorders.MinimumVolumeStorageRecorder": [[102, 1, 1, "", "__init__"]], "pywr.recorders.NodeRecorder": [[103, 1, 1, "", "__init__"]], "pywr.recorders.NormalisedGaussianKDEStorageRecorder": [[104, 1, 1, "", "__init__"]], "pywr.recorders.NumpyArrayAreaRecorder": [[105, 1, 1, "", "__init__"]], "pywr.recorders.NumpyArrayDailyProfileParameterRecorder": [[106, 1, 1, "", "__init__"]], "pywr.recorders.NumpyArrayIndexParameterRecorder": [[107, 1, 1, "", "__init__"]], "pywr.recorders.NumpyArrayLevelRecorder": [[108, 1, 1, "", "__init__"]], "pywr.recorders.NumpyArrayNodeCurtailmentRatioRecorder": [[109, 1, 1, "", "__init__"]], "pywr.recorders.NumpyArrayNodeDeficitRecorder": [[110, 1, 1, "", "__init__"]], "pywr.recorders.NumpyArrayNodeRecorder": [[111, 1, 1, "", "__init__"]], "pywr.recorders.NumpyArrayNodeSuppliedRatioRecorder": [[112, 1, 1, "", "__init__"]], "pywr.recorders.NumpyArrayParameterRecorder": [[113, 1, 1, "", "__init__"]], "pywr.recorders.NumpyArrayStorageRecorder": [[114, 1, 1, "", "__init__"]], "pywr.recorders.ParameterRecorder": [[115, 1, 1, "", "__init__"]], "pywr.recorders.Recorder": [[116, 1, 1, "", "__init__"]], "pywr.recorders.RollingMeanFlowNodeRecorder": [[117, 1, 1, "", "__init__"]], "pywr.recorders.RollingWindowParameterRecorder": [[118, 1, 1, "", "__init__"]], "pywr.recorders.SeasonalFlowDurationCurveRecorder": [[119, 1, 1, "", "__init__"]], "pywr.recorders.StorageDurationCurveRecorder": [[120, 1, 1, "", "__init__"]], "pywr.recorders.StorageRecorder": [[121, 1, 1, "", "__init__"]], "pywr.recorders.TablesRecorder": [[122, 1, 1, "", "__init__"]], "pywr.recorders.TimestepCountIndexParameterRecorder": [[123, 1, 1, "", "__init__"]], "pywr.recorders.TotalDeficitNodeRecorder": [[124, 1, 1, "", "__init__"]], "pywr.recorders.TotalFlowNodeRecorder": [[125, 1, 1, "", "__init__"]], "pywr.recorders.TotalHydroEnergyRecorder": [[126, 1, 1, "", "__init__"]], "pywr.recorders.TotalParameterRecorder": [[127, 1, 1, "", "__init__"]], "pywr.solvers": [[135, 0, 1, "", "CythonGLPKEdgeSolver"], [135, 0, 1, "", "CythonGLPKSolver"], [135, 0, 1, "", "NullSolver"], [135, 0, 1, "", "Solver"], [135, 2, 0, "-", "cython_glpk"]], "pywr.solvers.CythonGLPKEdgeSolver": [[135, 1, 1, "", "dump_glpk"], [135, 1, 1, "", "dump_lp"], [135, 1, 1, "", "dump_mps"], [135, 5, 1, "", "name"], [135, 1, 1, "", "reset"], [135, 3, 1, "", "retry_solve"], [135, 3, 1, "", "set_fixed_costs_once"], [135, 3, 1, "", "set_fixed_factors_once"], [135, 3, 1, "", "set_fixed_flows_once"], [135, 3, 1, "", "settings"], [135, 1, 1, "", "setup"], [135, 1, 1, "", "solve"], [135, 3, 1, "", "stats"], [135, 3, 1, "", "use_presolve"], [135, 3, 1, "", "use_unsafe_api"]], "pywr.solvers.CythonGLPKSolver": [[135, 1, 1, "", "dump_glpk"], [135, 1, 1, "", "dump_lp"], [135, 1, 1, "", "dump_mps"], [135, 5, 1, "", "name"], [135, 1, 1, "", "reset"], [135, 3, 1, "", "retry_solve"], [135, 3, 1, "", "routes"], [135, 3, 1, "", "routes_flows_array"], [135, 3, 1, "", "save_routes_flows"], [135, 3, 1, "", "set_fixed_costs_once"], [135, 3, 1, "", "set_fixed_factors_once"], [135, 3, 1, "", "set_fixed_flows_once"], [135, 3, 1, "", "settings"], [135, 1, 1, "", "setup"], [135, 1, 1, "", "solve"], [135, 3, 1, "", "stats"], [135, 3, 1, "", "use_presolve"], [135, 3, 1, "", "use_unsafe_api"]], "pywr.solvers.NullSolver": [[135, 5, 1, "", "name"], [135, 1, 1, "", "reset"], [135, 1, 1, "", "setup"], [135, 1, 1, "", "solve"]], "pywr.solvers.Solver": [[135, 5, 1, "", "name"], [135, 1, 1, "", "reset"], [135, 3, 1, "", "settings"], [135, 1, 1, "", "setup"], [135, 1, 1, "", "solve"], [135, 3, 1, "", "stats"]], "pywr.solvers.cython_glpk": [[135, 0, 1, "", "AbstractNodeData"], [135, 0, 1, "", "AggNodeFactorData"], [135, 0, 1, "", "BasisManager"], [135, 0, 1, "", "CythonGLPKEdgeSolver"], [135, 0, 1, "", "CythonGLPKSolver"], [135, 6, 1, "", "GLPKError"], [135, 6, 1, "", "GLPKInternalError"], [135, 0, 1, "", "GLPKSolver"]], "pywr.solvers.cython_glpk.AbstractNodeData": [[135, 5, 1, "", "id"], [135, 5, 1, "", "in_edges"], [135, 5, 1, "", "is_link"], [135, 5, 1, "", "out_edges"], [135, 5, 1, "", "row"]], "pywr.solvers.cython_glpk.AggNodeFactorData": [[135, 5, 1, "", "ind_ptr"], [135, 5, 1, "", "inds"], [135, 5, 1, "", "node_ind"], [135, 5, 1, "", "row"], [135, 5, 1, "", "vals"]], "pywr.solvers.cython_glpk.CythonGLPKEdgeSolver": [[135, 1, 1, "", "reset"], [135, 5, 1, "", "retry_solve"], [135, 5, 1, "", "route_flows_arr"], [135, 1, 1, "", "setup"], [135, 1, 1, "", "solve"], [135, 5, 1, "", "stats"]], "pywr.solvers.cython_glpk.CythonGLPKSolver": [[135, 1, 1, "", "reset"], [135, 5, 1, "", "retry_solve"], [135, 5, 1, "", "route_flows_arr"], [135, 5, 1, "", "routes"], [135, 5, 1, "", "save_routes_flows"], [135, 1, 1, "", "setup"], [135, 1, 1, "", "solve"], [135, 5, 1, "", "stats"]], "pywr.solvers.cython_glpk.GLPKSolver": [[135, 1, 1, "", "dump_glpk"], [135, 1, 1, "", "dump_lp"], [135, 1, 1, "", "dump_mps"], [135, 1, 1, "", "reset"], [135, 5, 1, "", "set_fixed_costs_once"], [135, 5, 1, "", "set_fixed_factors_once"], [135, 5, 1, "", "set_fixed_flows_once"], [135, 1, 1, "", "set_solver_options"], [135, 1, 1, "", "setup"], [135, 1, 1, "", "solve"], [135, 5, 1, "", "use_presolve"], [135, 5, 1, "", "use_unsafe_api"]], "pywr.utils": [[136, 2, 0, "-", "bisect"]], "pywr.utils.bisect": [[136, 0, 1, "", "BisectionSearchModel"]], "pywr.utils.bisect.BisectionSearchModel": [[136, 1, 1, "", "run"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module", "3": "py:property", "4": "py:function", "5": "py:attribute", "6": "py:exception"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"pywr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 135, 136, 140, 144, 145, 146, 147, 149, 150], "core": [0, 1, 2, 3, 129], "scenario": [0, 145], "scenariocollect": 1, "scenarioindex": 2, "timestep": [3, 145], "domain": [4, 5, 6, 7, 8, 9], "river": [4, 5, 6, 7, 8, 9], "catchment": 4, "reservoir": 5, "rivergaug": 7, "riversplit": 8, "riversplitwithgaug": 9, "node": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 130, 137, 144, 151], "aggregatednod": 10, "aggregatedstorag": 11, "annualvirtualstorag": 12, "breaklink": 13, "delaynod": 14, "input": 15, "link": 16, "losslink": 17, "monthlyvirtualstorag": 18, "multisplitlink": 19, "output": 21, "piecewiselink": 22, "rollingvirtualstorag": 23, "seasonalvirtualstorag": 24, "storag": [25, 139, 151], "virtualstorag": 26, "paramet": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 133, 138, 145, 151], "abstractthresholdparamet": 27, "aggregatedindexparamet": 28, "aggregatedparamet": 29, "annualharmonicseriesparamet": 30, "arrayindexedparamet": 31, "arrayindexedscenariomonthlyfactorsparamet": 32, "arrayindexedscenarioparamet": 33, "binarystepparamet": 34, "constantparamet": 35, "constantscenarioindexparamet": 36, "constantscenarioparamet": 37, "currentordinaldaythresholdparamet": 38, "currentyearthresholdparamet": 39, "dailyprofileparamet": 40, "dataframeparamet": 41, "deficitparamet": 42, "discountfactorparamet": 43, "divisionparamet": 44, "flowdelayparamet": 45, "flowparamet": 46, "hydropowertargetparamet": 47, "indexparamet": 48, "indexedarrayparamet": 49, "interpolatedflowparamet": 50, "interpolatedparamet": 51, "interpolatedquadratureparamet": 52, "interpolatedvolumeparamet": 53, "logisticparamet": 54, "maxparamet": [55, 138], "minparamet": [56, 138], "monthlyprofileparamet": 57, "multiplethresholdindexparamet": 58, "multiplethresholdparameterindexparamet": 59, "negativemaxparamet": [60, 138], "negativeminparamet": 61, "negativeparamet": [62, 138], "nodethresholdparamet": 63, "offsetparamet": 64, "parameterthresholdparamet": 66, "piecewiseintegralparamet": 67, "rbfprofileparamet": 68, "recorderthresholdparamet": 69, "rectifierparamet": 70, "rollingmeanflownodeparamet": 71, "scenariodailyprofileparamet": 72, "scenariomonthlyprofileparamet": 73, "scenarioweeklyprofileparamet": 74, "scenariowrapperparamet": 75, "storageparamet": 76, "storagethresholdparamet": 77, "tablesarrayparamet": 78, "uniformdrawdownprofileparamet": 79, "weeklyprofileparamet": 80, "weightedaverageprofileparamet": 81, "control_curv": [82, 83, 84, 85, 86], "basecontrolcurveparamet": 82, "controlcurveindexparamet": 83, "controlcurveinterpolatedparamet": 84, "controlcurveparamet": 85, "controlcurvepiecewiseinterpolatedparamet": 86, "record": [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 134, 146], "aggregatedrecord": 87, "aggreg": [88, 137, 138], "annualcountindexparameterrecord": 89, "annualcountindexthresholdrecord": 90, "annualtotalflowrecord": 91, "csvrecord": 92, "deficitfrequencynoderecord": 93, "flowdurationcurvedeviationrecord": 94, "flowdurationcurverecord": 95, "gaussiankdestoragerecord": 96, "hydropowerrecord": 97, "indexparameterrecord": 98, "meanflownoderecord": 99, "meanparameterrecord": 100, "minimumthresholdvolumestoragerecord": 101, "minimumvolumestoragerecord": 102, "noderecord": 103, "normalisedgaussiankdestoragerecord": 104, "numpyarrayarearecord": 105, "numpyarraydailyprofileparameterrecord": 106, "numpyarrayindexparameterrecord": 107, "numpyarraylevelrecord": 108, "numpyarraynodecurtailmentratiorecord": 109, "numpyarraynodedeficitrecord": 110, "numpyarraynoderecord": 111, "numpyarraynodesuppliedratiorecord": 112, "numpyarrayparameterrecord": 113, "numpyarraystoragerecord": 114, "parameterrecord": 115, "rollingmeanflownoderecord": 117, "rollingwindowparameterrecord": 118, "seasonalflowdurationcurverecord": 119, "storagedurationcurverecord": 120, "storagerecord": 121, "tablesrecord": 122, "timestepcountindexparameterrecord": 123, "totaldeficitnoderecord": 124, "totalflownoderecord": 125, "totalhydroenergyrecord": 126, "totalparameterrecord": 127, "refer": 128, "document": [128, 149, 151, 152], "class": [129, 130, 133, 134], "notebook": 131, "util": [131, 136], "optimis": 132, "submodul": [132, 135], "platypu": 132, "pygmo": 132, "modul": [132, 135], "content": [132, 135], "base": [133, 134], "simpl": [133, 145], "combin": 133, "multipl": 133, "annual": 133, "profil": [133, 141], "datafram": 133, "hdf5": 133, "arrai": [133, 134], "threshold": 133, "activ": 133, "function": [133, 138], "interpol": 133, "control": [133, 139], "curv": [133, 134, 139], "hydropow": 133, "other": [133, 139, 145], "numpi": 134, "flow": [134, 137], "durat": 134, "deficit": 134, "statist": 134, "index": [134, 141], "file": 134, "hydro": 134, "power": 134, "solver": [135, 151], "cython_glpk": 135, "cython_lpsolv": 135, "bisect": 136, "search": 136, "constrain": 137, "us": [137, 141], "ratio": 137, "maximum": 137, "valu": 137, "addit": 137, "inform": 137, "basic": [138, 139], "usag": 138, "sum": 138, "min": 138, "max": 138, "product": 138, "mean": 138, "median": 138, "ani": 138, "all": 138, "custom": [138, 139, 144, 145, 146], "dynam": 139, "behaviour": 139, "concept": 139, "depend": [139, 145, 150], "cookbook": 140, "exampl": [140, 141, 153], "extern": 141, "data": 141, "support": 141, "format": [141, 151], "checksum": 141, "timeseri": 141, "timeseries1": 141, "csv": 141, "constant": 141, "demand": [141, 142], "monthli": 141, "demands_monthli": 141, "multi": 141, "multiindex_data": 141, "tabl": 141, "restrict": 142, "glpk": 143, "error": [143, 151], "handl": 143, "perform": [143, 145], "version": 143, "1": 143, "17": 143, "abov": 143, "older": 143, "extend": [144, 145, 146, 147], "A": [145, 153], "track": 145, "state": 145, "setup": 145, "reset": 145, "befor": 145, "after": 145, "improv": 145, "cython": 145, "problem": 148, "formul": 148, "welcom": 149, "": 149, "instal": 150, "gener": 150, "binari": 150, "wheel": 150, "pip": 150, "packag": 150, "anaconda": 150, "from": 150, "sourc": 150, "window": 150, "linux": 150, "ubuntu": 150, "o": 150, "x": 150, "develop": 150, "test": 150, "continu": 150, "integr": 150, "json": 151, "model": 151, "overview": 151, "structur": 151, "metadata": 151, "timestepp": 151, "non": 151, "edg": 151, "load": 151, "debug": 151, "syntax": 151, "footnot": 151, "licens": 152, "softwar": 152, "citat": 152, "tutori": 153, "minim": 153}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"pywr.core.Scenario": [[0, "pywr-core-scenario"]], "pywr.core.ScenarioCollection": [[1, "pywr-core-scenariocollection"]], "pywr.core.ScenarioIndex": [[2, "pywr-core-scenarioindex"]], "pywr.core.Timestep": [[3, "pywr-core-timestep"]], "pywr.domains.river.Catchment": [[4, "pywr-domains-river-catchment"]], "pywr.domains.river.Reservoir": [[5, "pywr-domains-river-reservoir"]], "pywr.domains.river.River": [[6, "pywr-domains-river-river"]], "pywr.domains.river.RiverGauge": [[7, "pywr-domains-river-rivergauge"]], "pywr.domains.river.RiverSplit": [[8, "pywr-domains-river-riversplit"]], "pywr.domains.river.RiverSplitWithGauge": [[9, "pywr-domains-river-riversplitwithgauge"]], "pywr.nodes.AggregatedNode": [[10, "pywr-nodes-aggregatednode"]], "pywr.nodes.AggregatedStorage": [[11, "pywr-nodes-aggregatedstorage"]], "pywr.nodes.AnnualVirtualStorage": [[12, "pywr-nodes-annualvirtualstorage"]], "pywr.nodes.BreakLink": [[13, "pywr-nodes-breaklink"]], "pywr.nodes.DelayNode": [[14, "pywr-nodes-delaynode"]], "pywr.nodes.Input": [[15, "pywr-nodes-input"]], "pywr.nodes.Link": [[16, "pywr-nodes-link"]], "pywr.nodes.LossLink": [[17, "pywr-nodes-losslink"]], "pywr.nodes.MonthlyVirtualStorage": [[18, "pywr-nodes-monthlyvirtualstorage"]], "pywr.nodes.MultiSplitLink": [[19, "pywr-nodes-multisplitlink"]], "pywr.nodes.Node": [[20, "pywr-nodes-node"]], "pywr.nodes.Output": [[21, "pywr-nodes-output"]], "pywr.nodes.PiecewiseLink": [[22, "pywr-nodes-piecewiselink"]], "pywr.nodes.RollingVirtualStorage": [[23, "pywr-nodes-rollingvirtualstorage"]], "pywr.nodes.SeasonalVirtualStorage": [[24, "pywr-nodes-seasonalvirtualstorage"]], "pywr.nodes.Storage": [[25, "pywr-nodes-storage"]], "pywr.nodes.VirtualStorage": [[26, "pywr-nodes-virtualstorage"]], "pywr.parameters.AbstractThresholdParameter": [[27, "pywr-parameters-abstractthresholdparameter"]], "pywr.parameters.AggregatedIndexParameter": [[28, "pywr-parameters-aggregatedindexparameter"]], "pywr.parameters.AggregatedParameter": [[29, "pywr-parameters-aggregatedparameter"]], "pywr.parameters.AnnualHarmonicSeriesParameter": [[30, "pywr-parameters-annualharmonicseriesparameter"]], "pywr.parameters.ArrayIndexedParameter": [[31, "pywr-parameters-arrayindexedparameter"]], "pywr.parameters.ArrayIndexedScenarioMonthlyFactorsParameter": [[32, "pywr-parameters-arrayindexedscenariomonthlyfactorsparameter"]], "pywr.parameters.ArrayIndexedScenarioParameter": [[33, "pywr-parameters-arrayindexedscenarioparameter"]], "pywr.parameters.BinaryStepParameter": [[34, "pywr-parameters-binarystepparameter"]], "pywr.parameters.ConstantParameter": [[35, "pywr-parameters-constantparameter"]], "pywr.parameters.ConstantScenarioIndexParameter": [[36, "pywr-parameters-constantscenarioindexparameter"]], "pywr.parameters.ConstantScenarioParameter": [[37, "pywr-parameters-constantscenarioparameter"]], "pywr.parameters.CurrentOrdinalDayThresholdParameter": [[38, "pywr-parameters-currentordinaldaythresholdparameter"]], "pywr.parameters.CurrentYearThresholdParameter": [[39, "pywr-parameters-currentyearthresholdparameter"]], "pywr.parameters.DailyProfileParameter": [[40, "pywr-parameters-dailyprofileparameter"]], "pywr.parameters.DataFrameParameter": [[41, "pywr-parameters-dataframeparameter"]], "pywr.parameters.DeficitParameter": [[42, "pywr-parameters-deficitparameter"]], "pywr.parameters.DiscountFactorParameter": [[43, "pywr-parameters-discountfactorparameter"]], "pywr.parameters.DivisionParameter": [[44, "pywr-parameters-divisionparameter"]], "pywr.parameters.FlowDelayParameter": [[45, "pywr-parameters-flowdelayparameter"]], "pywr.parameters.FlowParameter": [[46, "pywr-parameters-flowparameter"]], "pywr.parameters.HydropowerTargetParameter": [[47, "pywr-parameters-hydropowertargetparameter"]], "pywr.parameters.IndexParameter": [[48, "pywr-parameters-indexparameter"]], "pywr.parameters.IndexedArrayParameter": [[49, "pywr-parameters-indexedarrayparameter"]], "pywr.parameters.InterpolatedFlowParameter": [[50, "pywr-parameters-interpolatedflowparameter"]], "pywr.parameters.InterpolatedParameter": [[51, "pywr-parameters-interpolatedparameter"]], "pywr.parameters.InterpolatedQuadratureParameter": [[52, "pywr-parameters-interpolatedquadratureparameter"]], "pywr.parameters.InterpolatedVolumeParameter": [[53, "pywr-parameters-interpolatedvolumeparameter"]], "pywr.parameters.LogisticParameter": [[54, "pywr-parameters-logisticparameter"]], "pywr.parameters.MaxParameter": [[55, "pywr-parameters-maxparameter"]], "pywr.parameters.MinParameter": [[56, "pywr-parameters-minparameter"]], "pywr.parameters.MonthlyProfileParameter": [[57, "pywr-parameters-monthlyprofileparameter"]], "pywr.parameters.MultipleThresholdIndexParameter": [[58, "pywr-parameters-multiplethresholdindexparameter"]], "pywr.parameters.MultipleThresholdParameterIndexParameter": [[59, "pywr-parameters-multiplethresholdparameterindexparameter"]], "pywr.parameters.NegativeMaxParameter": [[60, "pywr-parameters-negativemaxparameter"]], "pywr.parameters.NegativeMinParameter": [[61, "pywr-parameters-negativeminparameter"]], "pywr.parameters.NegativeParameter": [[62, "pywr-parameters-negativeparameter"]], "pywr.parameters.NodeThresholdParameter": [[63, "pywr-parameters-nodethresholdparameter"]], "pywr.parameters.OffsetParameter": [[64, "pywr-parameters-offsetparameter"]], "pywr.parameters.Parameter": [[65, "pywr-parameters-parameter"]], "pywr.parameters.ParameterThresholdParameter": [[66, "pywr-parameters-parameterthresholdparameter"]], "pywr.parameters.PiecewiseIntegralParameter": [[67, "pywr-parameters-piecewiseintegralparameter"]], "pywr.parameters.RbfProfileParameter": [[68, "pywr-parameters-rbfprofileparameter"]], "pywr.parameters.RecorderThresholdParameter": [[69, "pywr-parameters-recorderthresholdparameter"]], "pywr.parameters.RectifierParameter": [[70, "pywr-parameters-rectifierparameter"]], "pywr.parameters.RollingMeanFlowNodeParameter": [[71, "pywr-parameters-rollingmeanflownodeparameter"]], "pywr.parameters.ScenarioDailyProfileParameter": [[72, "pywr-parameters-scenariodailyprofileparameter"]], "pywr.parameters.ScenarioMonthlyProfileParameter": [[73, "pywr-parameters-scenariomonthlyprofileparameter"]], "pywr.parameters.ScenarioWeeklyProfileParameter": [[74, "pywr-parameters-scenarioweeklyprofileparameter"]], "pywr.parameters.ScenarioWrapperParameter": [[75, "pywr-parameters-scenariowrapperparameter"]], "pywr.parameters.StorageParameter": [[76, "pywr-parameters-storageparameter"]], "pywr.parameters.StorageThresholdParameter": [[77, "pywr-parameters-storagethresholdparameter"]], "pywr.parameters.TablesArrayParameter": [[78, "pywr-parameters-tablesarrayparameter"]], "pywr.parameters.UniformDrawdownProfileParameter": [[79, "pywr-parameters-uniformdrawdownprofileparameter"]], "pywr.parameters.WeeklyProfileParameter": [[80, "pywr-parameters-weeklyprofileparameter"]], "pywr.parameters.WeightedAverageProfileParameter": [[81, "pywr-parameters-weightedaverageprofileparameter"]], "pywr.parameters.control_curves.BaseControlCurveParameter": [[82, "pywr-parameters-control-curves-basecontrolcurveparameter"]], "pywr.parameters.control_curves.ControlCurveIndexParameter": [[83, "pywr-parameters-control-curves-controlcurveindexparameter"]], "pywr.parameters.control_curves.ControlCurveInterpolatedParameter": [[84, "pywr-parameters-control-curves-controlcurveinterpolatedparameter"]], "pywr.parameters.control_curves.ControlCurveParameter": [[85, "pywr-parameters-control-curves-controlcurveparameter"]], "pywr.parameters.control_curves.ControlCurvePiecewiseInterpolatedParameter": [[86, "pywr-parameters-control-curves-controlcurvepiecewiseinterpolatedparameter"]], "pywr.recorders.AggregatedRecorder": [[87, "pywr-recorders-aggregatedrecorder"]], "pywr.recorders.Aggregator": [[88, "pywr-recorders-aggregator"]], "pywr.recorders.AnnualCountIndexParameterRecorder": [[89, "pywr-recorders-annualcountindexparameterrecorder"]], "pywr.recorders.AnnualCountIndexThresholdRecorder": [[90, "pywr-recorders-annualcountindexthresholdrecorder"]], "pywr.recorders.AnnualTotalFlowRecorder": [[91, "pywr-recorders-annualtotalflowrecorder"]], "pywr.recorders.CSVRecorder": [[92, "pywr-recorders-csvrecorder"]], "pywr.recorders.DeficitFrequencyNodeRecorder": [[93, "pywr-recorders-deficitfrequencynoderecorder"]], "pywr.recorders.FlowDurationCurveDeviationRecorder": [[94, "pywr-recorders-flowdurationcurvedeviationrecorder"]], "pywr.recorders.FlowDurationCurveRecorder": [[95, "pywr-recorders-flowdurationcurverecorder"]], "pywr.recorders.GaussianKDEStorageRecorder": [[96, "pywr-recorders-gaussiankdestoragerecorder"]], "pywr.recorders.HydropowerRecorder": [[97, "pywr-recorders-hydropowerrecorder"]], "pywr.recorders.IndexParameterRecorder": [[98, "pywr-recorders-indexparameterrecorder"]], "pywr.recorders.MeanFlowNodeRecorder": [[99, "pywr-recorders-meanflownoderecorder"]], "pywr.recorders.MeanParameterRecorder": [[100, "pywr-recorders-meanparameterrecorder"]], "pywr.recorders.MinimumThresholdVolumeStorageRecorder": [[101, "pywr-recorders-minimumthresholdvolumestoragerecorder"]], "pywr.recorders.MinimumVolumeStorageRecorder": [[102, "pywr-recorders-minimumvolumestoragerecorder"]], "pywr.recorders.NodeRecorder": [[103, "pywr-recorders-noderecorder"]], "pywr.recorders.NormalisedGaussianKDEStorageRecorder": [[104, "pywr-recorders-normalisedgaussiankdestoragerecorder"]], "pywr.recorders.NumpyArrayAreaRecorder": [[105, "pywr-recorders-numpyarrayarearecorder"]], "pywr.recorders.NumpyArrayDailyProfileParameterRecorder": [[106, "pywr-recorders-numpyarraydailyprofileparameterrecorder"]], "pywr.recorders.NumpyArrayIndexParameterRecorder": [[107, "pywr-recorders-numpyarrayindexparameterrecorder"]], "pywr.recorders.NumpyArrayLevelRecorder": [[108, "pywr-recorders-numpyarraylevelrecorder"]], "pywr.recorders.NumpyArrayNodeCurtailmentRatioRecorder": [[109, "pywr-recorders-numpyarraynodecurtailmentratiorecorder"]], "pywr.recorders.NumpyArrayNodeDeficitRecorder": [[110, "pywr-recorders-numpyarraynodedeficitrecorder"]], "pywr.recorders.NumpyArrayNodeRecorder": [[111, "pywr-recorders-numpyarraynoderecorder"]], "pywr.recorders.NumpyArrayNodeSuppliedRatioRecorder": [[112, "pywr-recorders-numpyarraynodesuppliedratiorecorder"]], "pywr.recorders.NumpyArrayParameterRecorder": [[113, "pywr-recorders-numpyarrayparameterrecorder"]], "pywr.recorders.NumpyArrayStorageRecorder": [[114, "pywr-recorders-numpyarraystoragerecorder"]], "pywr.recorders.ParameterRecorder": [[115, "pywr-recorders-parameterrecorder"]], "pywr.recorders.Recorder": [[116, "pywr-recorders-recorder"]], "pywr.recorders.RollingMeanFlowNodeRecorder": [[117, "pywr-recorders-rollingmeanflownoderecorder"]], "pywr.recorders.RollingWindowParameterRecorder": [[118, "pywr-recorders-rollingwindowparameterrecorder"]], "pywr.recorders.SeasonalFlowDurationCurveRecorder": [[119, "pywr-recorders-seasonalflowdurationcurverecorder"]], "pywr.recorders.StorageDurationCurveRecorder": [[120, "pywr-recorders-storagedurationcurverecorder"]], "pywr.recorders.StorageRecorder": [[121, "pywr-recorders-storagerecorder"]], "pywr.recorders.TablesRecorder": [[122, "pywr-recorders-tablesrecorder"]], "pywr.recorders.TimestepCountIndexParameterRecorder": [[123, "pywr-recorders-timestepcountindexparameterrecorder"]], "pywr.recorders.TotalDeficitNodeRecorder": [[124, "pywr-recorders-totaldeficitnoderecorder"]], "pywr.recorders.TotalFlowNodeRecorder": [[125, "pywr-recorders-totalflownoderecorder"]], "pywr.recorders.TotalHydroEnergyRecorder": [[126, "pywr-recorders-totalhydroenergyrecorder"]], "pywr.recorders.TotalParameterRecorder": [[127, "pywr-recorders-totalparameterrecorder"]], "Pywr reference documentation.": [[128, "pywr-reference-documentation"]], "Core classes": [[129, "core-classes"]], "Nodes": [[130, "nodes"], [151, "nodes"]], "Nodes classes": [[130, "nodes-classes"]], "Notebook Utilities": [[131, "notebook-utilities"]], "Optimisation": [[132, "optimisation"]], "Submodules": [[132, "submodules"], [135, "submodules"]], "Platypus (pywr.optimisation.platypus)": [[132, "platypus-pywr-optimisation-platypus"]], "Pygmo (pywr.optimisation.pygmo)": [[132, "module-pywr.optimisation.pygmo"]], "Module contents": [[132, "module-pywr.optimisation"], [135, "module-pywr.solvers"]], "Parameters": [[133, "parameters"], [151, "parameters"]], "Base Parameter class": [[133, "base-parameter-class"]], "Simple parameters": [[133, "simple-parameters"]], "Combining multiple parameters": [[133, "combining-multiple-parameters"]], "Annual profile parameters": [[133, "annual-profile-parameters"]], "Dataframe parameter": [[133, "dataframe-parameter"]], "HDF5 Parameter": [[133, "hdf5-parameter"]], "Array based parameters": [[133, "array-based-parameters"]], "Threshold parameters": [[133, "threshold-parameters"]], "Activation function parameters": [[133, "activation-function-parameters"]], "Interpolation parameters": [[133, "interpolation-parameters"]], "Control curve parameters": [[133, "control-curve-parameters"]], "Hydropower parameters": [[133, "hydropower-parameters"]], "Other parameters": [[133, "other-parameters"]], "Recorders": [[134, "recorders"]], "Base Recorder classes": [[134, "base-recorder-classes"]], "Numpy array recorders": [[134, "numpy-array-recorders"]], "Flow duration curve recorders": [[134, "flow-duration-curve-recorders"]], "Deficit recorders": [[134, "deficit-recorders"]], "Statistical recorders": [[134, "statistical-recorders"]], "Index recorders": [[134, "index-recorders"]], "File recorders": [[134, "file-recorders"]], "Hydro-power recorders": [[134, "hydro-power-recorders"]], "Solvers": [[135, "solvers"]], "pywr.solvers.cython_glpk module": [[135, "module-pywr.solvers.cython_glpk"]], "pywr.solvers.cython_lpsolve module": [[135, "pywr-solvers-cython-lpsolve-module"]], "Utilities": [[136, "utilities"]], "Bisection Search (pywr.utils.bisect)": [[136, "module-pywr.utils.bisect"]], "Aggregated nodes": [[137, "aggregated-nodes"]], "Constraining flow using a ratio": [[137, "constraining-flow-using-a-ratio"]], "Constraining flow using a maximum value": [[137, "constraining-flow-using-a-maximum-value"]], "Additional information": [[137, "additional-information"]], "Aggregated parameters": [[138, "aggregated-parameters"]], "Basic usage": [[138, "basic-usage"]], "Sum, Min, Max, Product": [[138, "sum-min-max-product"]], "Mean and Median": [[138, "mean-and-median"]], "Any and All": [[138, "any-and-all"]], "Custom aggregation functions": [[138, "custom-aggregation-functions"]], "MaxParameter, MinParameter and NegativeParameter, NegativeMaxParameter": [[138, "maxparameter-minparameter-and-negativeparameter-negativemaxparameter"]], "Dynamic behaviour and control curves": [[139, "dynamic-behaviour-and-control-curves"]], "Basic concept": [[139, "basic-concept"]], "Storage dependent control curves": [[139, "storage-dependent-control-curves"]], "Other control curves": [[139, "other-control-curves"]], "Custom control curves": [[139, "custom-control-curves"]], "Pywr cookbook examples": [[140, "pywr-cookbook-examples"]], "Using external data": [[141, "using-external-data"]], "Supported formats": [[141, "supported-formats"]], "Checksums": [[141, "checksums"]], "Examples": [[141, "examples"]], "Timeseries": [[141, "timeseries"]], "timeseries1.csv": [[141, "id1"]], "Constants": [[141, "constants"]], "demands.csv": [[141, "id2"]], "Monthly profiles": [[141, "monthly-profiles"]], "demands_monthly.csv": [[141, "id3"]], "Multi-index": [[141, "multi-index"]], "multiindex_data.csv": [[141, "id4"]], "Tables": [[141, "tables"]], "Demand restrictions": [[142, "demand-restrictions"]], "GLPK error handling and performance": [[143, "glpk-error-handling-and-performance"]], "Version 1.17 and above": [[143, "version-1-17-and-above"]], "Older versions": [[143, "older-versions"]], "Extending Pywr with custom Nodes": [[144, "extending-pywr-with-custom-nodes"]], "Extending Pywr with custom Parameters": [[145, "extending-pywr-with-custom-parameters"]], "A simple parameter": [[145, "a-simple-parameter"]], "Timesteps and scenarios": [[145, "timesteps-and-scenarios"]], "Tracking state with setup, reset, before and after": [[145, "tracking-state-with-setup-reset-before-and-after"]], "Dependency on other parameters": [[145, "dependency-on-other-parameters"]], "Improving performance with Cython": [[145, "improving-performance-with-cython"]], "Extending Pywr with custom Recorders": [[146, "extending-pywr-with-custom-recorders"]], "Extending Pywr": [[147, "extending-pywr"]], "Problem formulation": [[148, "problem-formulation"]], "Welcome to Pywr\u2019s documentation!": [[149, "welcome-to-pywr-s-documentation"]], "Installing Pywr": [[150, "installing-pywr"]], "Dependencies": [[150, "dependencies"]], "Installing (in general)": [[150, "installing-in-general"]], "Installing binary wheels with pip": [[150, "installing-binary-wheels-with-pip"]], "Installing binary packages with Anaconda": [[150, "installing-binary-packages-with-anaconda"]], "Installing from source with Anaconda": [[150, "installing-from-source-with-anaconda"]], "Installing on Windows": [[150, "installing-on-windows"]], "Installing on Linux": [[150, "installing-on-linux"]], "Ubuntu": [[150, "ubuntu"]], "Installing on OS X": [[150, "installing-on-os-x"]], "Development and testing": [[150, "development-and-testing"]], "Continuous Integration": [[150, "continuous-integration"]], "JSON model format": [[151, "json-model-format"]], "Overview of document structure": [[151, "overview-of-document-structure"]], "Metadata": [[151, "metadata"]], "Timestepper": [[151, "timestepper"]], "Solver": [[151, "solver"]], "Non-storage nodes": [[151, "non-storage-nodes"]], "Storage nodes": [[151, "storage-nodes"]], "Edges": [[151, "edges"]], "Loading a JSON document": [[151, "loading-a-json-document"]], "Debugging and syntax errors": [[151, "debugging-and-syntax-errors"]], "Footnotes": [[151, "footnotes"]], "License": [[152, "license"]], "Software": [[152, "software"]], "Documentation": [[152, "documentation"]], "Citation": [[152, "citation"]], "Tutorial": [[153, "tutorial"]], "A minimal example": [[153, "a-minimal-example"]]}, "indexentries": {"scenario (class in pywr.core)": [[0, "pywr.core.Scenario"]], "__init__() (pywr.core.scenario method)": [[0, "pywr.core.Scenario.__init__"]], "scenariocollection (class in pywr.core)": [[1, "pywr.core.ScenarioCollection"]], "__init__() (pywr.core.scenariocollection method)": [[1, "pywr.core.ScenarioCollection.__init__"]], "scenarioindex (class in pywr.core)": [[2, "pywr.core.ScenarioIndex"]], "__init__() (pywr.core.scenarioindex method)": [[2, "pywr.core.ScenarioIndex.__init__"]], "timestep (class in pywr.core)": [[3, "pywr.core.Timestep"]], "__init__() (pywr.core.timestep method)": [[3, "pywr.core.Timestep.__init__"]], "catchment (class in pywr.domains.river)": [[4, "pywr.domains.river.Catchment"]], "__init__() (pywr.domains.river.catchment method)": [[4, "pywr.domains.river.Catchment.__init__"]], "reservoir (class in pywr.domains.river)": [[5, "pywr.domains.river.Reservoir"]], "__init__() (pywr.domains.river.reservoir method)": [[5, "pywr.domains.river.Reservoir.__init__"]], "river (class in pywr.domains.river)": [[6, "pywr.domains.river.River"]], "__init__() (pywr.domains.river.river method)": [[6, "pywr.domains.river.River.__init__"]], "rivergauge (class in pywr.domains.river)": [[7, "pywr.domains.river.RiverGauge"]], "__init__() (pywr.domains.river.rivergauge method)": [[7, "pywr.domains.river.RiverGauge.__init__"]], "riversplit (class in pywr.domains.river)": [[8, "pywr.domains.river.RiverSplit"]], "__init__() (pywr.domains.river.riversplit method)": [[8, "pywr.domains.river.RiverSplit.__init__"]], "riversplitwithgauge (class in pywr.domains.river)": [[9, "pywr.domains.river.RiverSplitWithGauge"]], "__init__() (pywr.domains.river.riversplitwithgauge method)": [[9, "pywr.domains.river.RiverSplitWithGauge.__init__"]], "aggregatednode (class in pywr.nodes)": [[10, "pywr.nodes.AggregatedNode"]], "__init__() (pywr.nodes.aggregatednode method)": [[10, "pywr.nodes.AggregatedNode.__init__"]], "aggregatedstorage (class in pywr.nodes)": [[11, "pywr.nodes.AggregatedStorage"]], "__init__() (pywr.nodes.aggregatedstorage method)": [[11, "pywr.nodes.AggregatedStorage.__init__"]], "annualvirtualstorage (class in pywr.nodes)": [[12, "pywr.nodes.AnnualVirtualStorage"]], "__init__() (pywr.nodes.annualvirtualstorage method)": [[12, "pywr.nodes.AnnualVirtualStorage.__init__"]], "breaklink (class in pywr.nodes)": [[13, "pywr.nodes.BreakLink"]], "__init__() (pywr.nodes.breaklink method)": [[13, "pywr.nodes.BreakLink.__init__"]], "delaynode (class in pywr.nodes)": [[14, "pywr.nodes.DelayNode"]], "__init__() (pywr.nodes.delaynode method)": [[14, "pywr.nodes.DelayNode.__init__"]], "input (class in pywr.nodes)": [[15, "pywr.nodes.Input"]], "__init__() (pywr.nodes.input method)": [[15, "pywr.nodes.Input.__init__"]], "link (class in pywr.nodes)": [[16, "pywr.nodes.Link"]], "__init__() (pywr.nodes.link method)": [[16, "pywr.nodes.Link.__init__"]], "losslink (class in pywr.nodes)": [[17, "pywr.nodes.LossLink"]], "__init__() (pywr.nodes.losslink method)": [[17, "pywr.nodes.LossLink.__init__"]], "monthlyvirtualstorage (class in pywr.nodes)": [[18, "pywr.nodes.MonthlyVirtualStorage"]], "__init__() (pywr.nodes.monthlyvirtualstorage method)": [[18, "pywr.nodes.MonthlyVirtualStorage.__init__"]], "multisplitlink (class in pywr.nodes)": [[19, "pywr.nodes.MultiSplitLink"]], "__init__() (pywr.nodes.multisplitlink method)": [[19, "pywr.nodes.MultiSplitLink.__init__"]], "node (class in pywr.nodes)": [[20, "pywr.nodes.Node"]], "__init__() (pywr.nodes.node method)": [[20, "pywr.nodes.Node.__init__"]], "output (class in pywr.nodes)": [[21, "pywr.nodes.Output"]], "__init__() (pywr.nodes.output method)": [[21, "pywr.nodes.Output.__init__"]], "piecewiselink (class in pywr.nodes)": [[22, "pywr.nodes.PiecewiseLink"]], "__init__() (pywr.nodes.piecewiselink method)": [[22, "pywr.nodes.PiecewiseLink.__init__"]], "rollingvirtualstorage (class in pywr.nodes)": [[23, "pywr.nodes.RollingVirtualStorage"]], "__init__() (pywr.nodes.rollingvirtualstorage method)": [[23, "pywr.nodes.RollingVirtualStorage.__init__"]], "seasonalvirtualstorage (class in pywr.nodes)": [[24, "pywr.nodes.SeasonalVirtualStorage"]], "__init__() (pywr.nodes.seasonalvirtualstorage method)": [[24, "pywr.nodes.SeasonalVirtualStorage.__init__"]], "storage (class in pywr.nodes)": [[25, "pywr.nodes.Storage"]], "__init__() (pywr.nodes.storage method)": [[25, "pywr.nodes.Storage.__init__"]], "virtualstorage (class in pywr.nodes)": [[26, "pywr.nodes.VirtualStorage"]], "__init__() (pywr.nodes.virtualstorage method)": [[26, "pywr.nodes.VirtualStorage.__init__"]], "abstractthresholdparameter (class in pywr.parameters)": [[27, "pywr.parameters.AbstractThresholdParameter"]], "__init__() (pywr.parameters.abstractthresholdparameter method)": [[27, "pywr.parameters.AbstractThresholdParameter.__init__"]], "aggregatedindexparameter (class in pywr.parameters)": [[28, "pywr.parameters.AggregatedIndexParameter"]], "__init__() (pywr.parameters.aggregatedindexparameter method)": [[28, "pywr.parameters.AggregatedIndexParameter.__init__"]], "aggregatedparameter (class in pywr.parameters)": [[29, "pywr.parameters.AggregatedParameter"]], "__init__() (pywr.parameters.aggregatedparameter method)": [[29, "pywr.parameters.AggregatedParameter.__init__"]], "annualharmonicseriesparameter (class in pywr.parameters)": [[30, "pywr.parameters.AnnualHarmonicSeriesParameter"]], "__init__() (pywr.parameters.annualharmonicseriesparameter method)": [[30, "pywr.parameters.AnnualHarmonicSeriesParameter.__init__"]], "arrayindexedparameter (class in pywr.parameters)": [[31, "pywr.parameters.ArrayIndexedParameter"]], "__init__() (pywr.parameters.arrayindexedparameter method)": [[31, "pywr.parameters.ArrayIndexedParameter.__init__"]], "arrayindexedscenariomonthlyfactorsparameter (class in pywr.parameters)": [[32, "pywr.parameters.ArrayIndexedScenarioMonthlyFactorsParameter"]], "__init__() (pywr.parameters.arrayindexedscenariomonthlyfactorsparameter method)": [[32, "pywr.parameters.ArrayIndexedScenarioMonthlyFactorsParameter.__init__"]], "arrayindexedscenarioparameter (class in pywr.parameters)": [[33, "pywr.parameters.ArrayIndexedScenarioParameter"]], "__init__() (pywr.parameters.arrayindexedscenarioparameter method)": [[33, "pywr.parameters.ArrayIndexedScenarioParameter.__init__"]], "binarystepparameter (class in pywr.parameters)": [[34, "pywr.parameters.BinaryStepParameter"]], "__init__() (pywr.parameters.binarystepparameter method)": [[34, "pywr.parameters.BinaryStepParameter.__init__"]], "constantparameter (class in pywr.parameters)": [[35, "pywr.parameters.ConstantParameter"]], "__init__() (pywr.parameters.constantparameter method)": [[35, "pywr.parameters.ConstantParameter.__init__"]], "constantscenarioindexparameter (class in pywr.parameters)": [[36, "pywr.parameters.ConstantScenarioIndexParameter"]], "__init__() (pywr.parameters.constantscenarioindexparameter method)": [[36, "pywr.parameters.ConstantScenarioIndexParameter.__init__"]], "constantscenarioparameter (class in pywr.parameters)": [[37, "pywr.parameters.ConstantScenarioParameter"]], "__init__() (pywr.parameters.constantscenarioparameter method)": [[37, "pywr.parameters.ConstantScenarioParameter.__init__"]], "currentordinaldaythresholdparameter (class in pywr.parameters)": [[38, "pywr.parameters.CurrentOrdinalDayThresholdParameter"]], "__init__() (pywr.parameters.currentordinaldaythresholdparameter method)": [[38, "pywr.parameters.CurrentOrdinalDayThresholdParameter.__init__"]], "currentyearthresholdparameter (class in pywr.parameters)": [[39, "pywr.parameters.CurrentYearThresholdParameter"]], "__init__() (pywr.parameters.currentyearthresholdparameter method)": [[39, "pywr.parameters.CurrentYearThresholdParameter.__init__"]], "dailyprofileparameter (class in pywr.parameters)": [[40, "pywr.parameters.DailyProfileParameter"]], "__init__() (pywr.parameters.dailyprofileparameter method)": [[40, "pywr.parameters.DailyProfileParameter.__init__"]], "dataframeparameter (class in pywr.parameters)": [[41, "pywr.parameters.DataFrameParameter"]], "__init__() (pywr.parameters.dataframeparameter method)": [[41, "pywr.parameters.DataFrameParameter.__init__"]], "deficitparameter (class in pywr.parameters)": [[42, "pywr.parameters.DeficitParameter"]], "__init__() (pywr.parameters.deficitparameter method)": [[42, "pywr.parameters.DeficitParameter.__init__"]], "discountfactorparameter (class in pywr.parameters)": [[43, "pywr.parameters.DiscountFactorParameter"]], "__init__() (pywr.parameters.discountfactorparameter method)": [[43, "pywr.parameters.DiscountFactorParameter.__init__"]], "divisionparameter (class in pywr.parameters)": [[44, "pywr.parameters.DivisionParameter"]], "__init__() (pywr.parameters.divisionparameter method)": [[44, "pywr.parameters.DivisionParameter.__init__"]], "flowdelayparameter (class in pywr.parameters)": [[45, "pywr.parameters.FlowDelayParameter"]], "__init__() (pywr.parameters.flowdelayparameter method)": [[45, "pywr.parameters.FlowDelayParameter.__init__"]], "flowparameter (class in pywr.parameters)": [[46, "pywr.parameters.FlowParameter"]], "__init__() (pywr.parameters.flowparameter method)": [[46, "pywr.parameters.FlowParameter.__init__"]], "hydropowertargetparameter (class in pywr.parameters)": [[47, "pywr.parameters.HydropowerTargetParameter"]], "__init__() (pywr.parameters.hydropowertargetparameter method)": [[47, "pywr.parameters.HydropowerTargetParameter.__init__"]], "indexparameter (class in pywr.parameters)": [[48, "pywr.parameters.IndexParameter"]], "__init__() (pywr.parameters.indexparameter method)": [[48, "pywr.parameters.IndexParameter.__init__"]], "indexedarrayparameter (class in pywr.parameters)": [[49, "pywr.parameters.IndexedArrayParameter"]], "__init__() (pywr.parameters.indexedarrayparameter method)": [[49, "pywr.parameters.IndexedArrayParameter.__init__"]], "interpolatedflowparameter (class in pywr.parameters)": [[50, "pywr.parameters.InterpolatedFlowParameter"]], "__init__() (pywr.parameters.interpolatedflowparameter method)": [[50, "pywr.parameters.InterpolatedFlowParameter.__init__"]], "interpolatedparameter (class in pywr.parameters)": [[51, "pywr.parameters.InterpolatedParameter"]], "__init__() (pywr.parameters.interpolatedparameter method)": [[51, "pywr.parameters.InterpolatedParameter.__init__"]], "interpolatedquadratureparameter (class in pywr.parameters)": [[52, "pywr.parameters.InterpolatedQuadratureParameter"]], "__init__() (pywr.parameters.interpolatedquadratureparameter method)": [[52, "pywr.parameters.InterpolatedQuadratureParameter.__init__"]], "interpolatedvolumeparameter (class in pywr.parameters)": [[53, "pywr.parameters.InterpolatedVolumeParameter"]], "__init__() (pywr.parameters.interpolatedvolumeparameter method)": [[53, "pywr.parameters.InterpolatedVolumeParameter.__init__"]], "logisticparameter (class in pywr.parameters)": [[54, "pywr.parameters.LogisticParameter"]], "__init__() (pywr.parameters.logisticparameter method)": [[54, "pywr.parameters.LogisticParameter.__init__"]], "maxparameter (class in pywr.parameters)": [[55, "pywr.parameters.MaxParameter"]], "__init__() (pywr.parameters.maxparameter method)": [[55, "pywr.parameters.MaxParameter.__init__"]], "minparameter (class in pywr.parameters)": [[56, "pywr.parameters.MinParameter"]], "__init__() (pywr.parameters.minparameter method)": [[56, "pywr.parameters.MinParameter.__init__"]], "monthlyprofileparameter (class in pywr.parameters)": [[57, "pywr.parameters.MonthlyProfileParameter"]], "__init__() (pywr.parameters.monthlyprofileparameter method)": [[57, "pywr.parameters.MonthlyProfileParameter.__init__"]], "multiplethresholdindexparameter (class in pywr.parameters)": [[58, "pywr.parameters.MultipleThresholdIndexParameter"]], "__init__() (pywr.parameters.multiplethresholdindexparameter method)": [[58, "pywr.parameters.MultipleThresholdIndexParameter.__init__"]], "multiplethresholdparameterindexparameter (class in pywr.parameters)": [[59, "pywr.parameters.MultipleThresholdParameterIndexParameter"]], "__init__() (pywr.parameters.multiplethresholdparameterindexparameter method)": [[59, "pywr.parameters.MultipleThresholdParameterIndexParameter.__init__"]], "negativemaxparameter (class in pywr.parameters)": [[60, "pywr.parameters.NegativeMaxParameter"]], "__init__() (pywr.parameters.negativemaxparameter method)": [[60, "pywr.parameters.NegativeMaxParameter.__init__"]], "negativeminparameter (class in pywr.parameters)": [[61, "pywr.parameters.NegativeMinParameter"]], "__init__() (pywr.parameters.negativeminparameter method)": [[61, "pywr.parameters.NegativeMinParameter.__init__"]], "negativeparameter (class in pywr.parameters)": [[62, "pywr.parameters.NegativeParameter"]], "__init__() (pywr.parameters.negativeparameter method)": [[62, "pywr.parameters.NegativeParameter.__init__"]], "nodethresholdparameter (class in pywr.parameters)": [[63, "pywr.parameters.NodeThresholdParameter"]], "__init__() (pywr.parameters.nodethresholdparameter method)": [[63, "pywr.parameters.NodeThresholdParameter.__init__"]], "offsetparameter (class in pywr.parameters)": [[64, "pywr.parameters.OffsetParameter"]], "__init__() (pywr.parameters.offsetparameter method)": [[64, "pywr.parameters.OffsetParameter.__init__"]], "parameter (class in pywr.parameters)": [[65, "pywr.parameters.Parameter"]], "__init__() (pywr.parameters.parameter method)": [[65, "pywr.parameters.Parameter.__init__"]], "parameterthresholdparameter (class in pywr.parameters)": [[66, "pywr.parameters.ParameterThresholdParameter"]], "__init__() (pywr.parameters.parameterthresholdparameter method)": [[66, "pywr.parameters.ParameterThresholdParameter.__init__"]], "piecewiseintegralparameter (class in pywr.parameters)": [[67, "pywr.parameters.PiecewiseIntegralParameter"]], "__init__() (pywr.parameters.piecewiseintegralparameter method)": [[67, "pywr.parameters.PiecewiseIntegralParameter.__init__"]], "rbfprofileparameter (class in pywr.parameters)": [[68, "pywr.parameters.RbfProfileParameter"]], "__init__() (pywr.parameters.rbfprofileparameter method)": [[68, "pywr.parameters.RbfProfileParameter.__init__"]], "recorderthresholdparameter (class in pywr.parameters)": [[69, "pywr.parameters.RecorderThresholdParameter"]], "__init__() (pywr.parameters.recorderthresholdparameter method)": [[69, "pywr.parameters.RecorderThresholdParameter.__init__"]], "rectifierparameter (class in pywr.parameters)": [[70, "pywr.parameters.RectifierParameter"]], "__init__() (pywr.parameters.rectifierparameter method)": [[70, "pywr.parameters.RectifierParameter.__init__"]], "rollingmeanflownodeparameter (class in pywr.parameters)": [[71, "pywr.parameters.RollingMeanFlowNodeParameter"]], "__init__() (pywr.parameters.rollingmeanflownodeparameter method)": [[71, "pywr.parameters.RollingMeanFlowNodeParameter.__init__"]], "scenariodailyprofileparameter (class in pywr.parameters)": [[72, "pywr.parameters.ScenarioDailyProfileParameter"]], "__init__() (pywr.parameters.scenariodailyprofileparameter method)": [[72, "pywr.parameters.ScenarioDailyProfileParameter.__init__"]], "scenariomonthlyprofileparameter (class in pywr.parameters)": [[73, "pywr.parameters.ScenarioMonthlyProfileParameter"]], "__init__() (pywr.parameters.scenariomonthlyprofileparameter method)": [[73, "pywr.parameters.ScenarioMonthlyProfileParameter.__init__"]], "scenarioweeklyprofileparameter (class in pywr.parameters)": [[74, "pywr.parameters.ScenarioWeeklyProfileParameter"]], "__init__() (pywr.parameters.scenarioweeklyprofileparameter method)": [[74, "pywr.parameters.ScenarioWeeklyProfileParameter.__init__"]], "scenariowrapperparameter (class in pywr.parameters)": [[75, "pywr.parameters.ScenarioWrapperParameter"]], "__init__() (pywr.parameters.scenariowrapperparameter method)": [[75, "pywr.parameters.ScenarioWrapperParameter.__init__"]], "storageparameter (class in pywr.parameters)": [[76, "pywr.parameters.StorageParameter"]], "__init__() (pywr.parameters.storageparameter method)": [[76, "pywr.parameters.StorageParameter.__init__"]], "storagethresholdparameter (class in pywr.parameters)": [[77, "pywr.parameters.StorageThresholdParameter"]], "__init__() (pywr.parameters.storagethresholdparameter method)": [[77, "pywr.parameters.StorageThresholdParameter.__init__"]], "tablesarrayparameter (class in pywr.parameters)": [[78, "pywr.parameters.TablesArrayParameter"]], "__init__() (pywr.parameters.tablesarrayparameter method)": [[78, "pywr.parameters.TablesArrayParameter.__init__"]], "uniformdrawdownprofileparameter (class in pywr.parameters)": [[79, "pywr.parameters.UniformDrawdownProfileParameter"]], "__init__() (pywr.parameters.uniformdrawdownprofileparameter method)": [[79, "pywr.parameters.UniformDrawdownProfileParameter.__init__"]], "weeklyprofileparameter (class in pywr.parameters)": [[80, "pywr.parameters.WeeklyProfileParameter"]], "__init__() (pywr.parameters.weeklyprofileparameter method)": [[80, "pywr.parameters.WeeklyProfileParameter.__init__"]], "weightedaverageprofileparameter (class in pywr.parameters)": [[81, "pywr.parameters.WeightedAverageProfileParameter"]], "__init__() (pywr.parameters.weightedaverageprofileparameter method)": [[81, "pywr.parameters.WeightedAverageProfileParameter.__init__"]], "basecontrolcurveparameter (class in pywr.parameters.control_curves)": [[82, "pywr.parameters.control_curves.BaseControlCurveParameter"]], "__init__() (pywr.parameters.control_curves.basecontrolcurveparameter method)": [[82, "pywr.parameters.control_curves.BaseControlCurveParameter.__init__"]], "controlcurveindexparameter (class in pywr.parameters.control_curves)": [[83, "pywr.parameters.control_curves.ControlCurveIndexParameter"]], "__init__() (pywr.parameters.control_curves.controlcurveindexparameter method)": [[83, "pywr.parameters.control_curves.ControlCurveIndexParameter.__init__"]], "controlcurveinterpolatedparameter (class in pywr.parameters.control_curves)": [[84, "pywr.parameters.control_curves.ControlCurveInterpolatedParameter"]], "__init__() (pywr.parameters.control_curves.controlcurveinterpolatedparameter method)": [[84, "pywr.parameters.control_curves.ControlCurveInterpolatedParameter.__init__"]], "controlcurveparameter (class in pywr.parameters.control_curves)": [[85, "pywr.parameters.control_curves.ControlCurveParameter"]], "__init__() (pywr.parameters.control_curves.controlcurveparameter method)": [[85, "pywr.parameters.control_curves.ControlCurveParameter.__init__"]], "controlcurvepiecewiseinterpolatedparameter (class in pywr.parameters.control_curves)": [[86, "pywr.parameters.control_curves.ControlCurvePiecewiseInterpolatedParameter"]], "__init__() (pywr.parameters.control_curves.controlcurvepiecewiseinterpolatedparameter method)": [[86, "pywr.parameters.control_curves.ControlCurvePiecewiseInterpolatedParameter.__init__"]], "aggregatedrecorder (class in pywr.recorders)": [[87, "pywr.recorders.AggregatedRecorder"]], "__init__() (pywr.recorders.aggregatedrecorder method)": [[87, "pywr.recorders.AggregatedRecorder.__init__"]], "aggregator (class in pywr.recorders)": [[88, "pywr.recorders.Aggregator"]], "__init__() (pywr.recorders.aggregator method)": [[88, "pywr.recorders.Aggregator.__init__"]], "annualcountindexparameterrecorder (class in pywr.recorders)": [[89, "pywr.recorders.AnnualCountIndexParameterRecorder"]], "__init__() (pywr.recorders.annualcountindexparameterrecorder method)": [[89, "pywr.recorders.AnnualCountIndexParameterRecorder.__init__"]], "annualcountindexthresholdrecorder (class in pywr.recorders)": [[90, "pywr.recorders.AnnualCountIndexThresholdRecorder"]], "__init__() (pywr.recorders.annualcountindexthresholdrecorder method)": [[90, "pywr.recorders.AnnualCountIndexThresholdRecorder.__init__"]], "annualtotalflowrecorder (class in pywr.recorders)": [[91, "pywr.recorders.AnnualTotalFlowRecorder"]], "__init__() (pywr.recorders.annualtotalflowrecorder method)": [[91, "pywr.recorders.AnnualTotalFlowRecorder.__init__"]], "csvrecorder (class in pywr.recorders)": [[92, "pywr.recorders.CSVRecorder"]], "__init__() (pywr.recorders.csvrecorder method)": [[92, "pywr.recorders.CSVRecorder.__init__"]], "deficitfrequencynoderecorder (class in pywr.recorders)": [[93, "pywr.recorders.DeficitFrequencyNodeRecorder"]], "__init__() (pywr.recorders.deficitfrequencynoderecorder method)": [[93, "pywr.recorders.DeficitFrequencyNodeRecorder.__init__"]], "flowdurationcurvedeviationrecorder (class in pywr.recorders)": [[94, "pywr.recorders.FlowDurationCurveDeviationRecorder"]], "__init__() (pywr.recorders.flowdurationcurvedeviationrecorder method)": [[94, "pywr.recorders.FlowDurationCurveDeviationRecorder.__init__"]], "flowdurationcurverecorder (class in pywr.recorders)": [[95, "pywr.recorders.FlowDurationCurveRecorder"]], "__init__() (pywr.recorders.flowdurationcurverecorder method)": [[95, "pywr.recorders.FlowDurationCurveRecorder.__init__"]], "gaussiankdestoragerecorder (class in pywr.recorders)": [[96, "pywr.recorders.GaussianKDEStorageRecorder"]], "__init__() (pywr.recorders.gaussiankdestoragerecorder method)": [[96, "pywr.recorders.GaussianKDEStorageRecorder.__init__"]], "hydropowerrecorder (class in pywr.recorders)": [[97, "pywr.recorders.HydropowerRecorder"]], "__init__() (pywr.recorders.hydropowerrecorder method)": [[97, "pywr.recorders.HydropowerRecorder.__init__"]], "indexparameterrecorder (class in pywr.recorders)": [[98, "pywr.recorders.IndexParameterRecorder"]], "__init__() (pywr.recorders.indexparameterrecorder method)": [[98, "pywr.recorders.IndexParameterRecorder.__init__"]], "meanflownoderecorder (class in pywr.recorders)": [[99, "pywr.recorders.MeanFlowNodeRecorder"]], "__init__() (pywr.recorders.meanflownoderecorder method)": [[99, "pywr.recorders.MeanFlowNodeRecorder.__init__"]], "meanparameterrecorder (class in pywr.recorders)": [[100, "pywr.recorders.MeanParameterRecorder"]], "__init__() (pywr.recorders.meanparameterrecorder method)": [[100, "pywr.recorders.MeanParameterRecorder.__init__"]], "minimumthresholdvolumestoragerecorder (class in pywr.recorders)": [[101, "pywr.recorders.MinimumThresholdVolumeStorageRecorder"]], "__init__() (pywr.recorders.minimumthresholdvolumestoragerecorder method)": [[101, "pywr.recorders.MinimumThresholdVolumeStorageRecorder.__init__"]], "minimumvolumestoragerecorder (class in pywr.recorders)": [[102, "pywr.recorders.MinimumVolumeStorageRecorder"]], "__init__() (pywr.recorders.minimumvolumestoragerecorder method)": [[102, "pywr.recorders.MinimumVolumeStorageRecorder.__init__"]], "noderecorder (class in pywr.recorders)": [[103, "pywr.recorders.NodeRecorder"]], "__init__() (pywr.recorders.noderecorder method)": [[103, "pywr.recorders.NodeRecorder.__init__"]], "normalisedgaussiankdestoragerecorder (class in pywr.recorders)": [[104, "pywr.recorders.NormalisedGaussianKDEStorageRecorder"]], "__init__() (pywr.recorders.normalisedgaussiankdestoragerecorder method)": [[104, "pywr.recorders.NormalisedGaussianKDEStorageRecorder.__init__"]], "numpyarrayarearecorder (class in pywr.recorders)": [[105, "pywr.recorders.NumpyArrayAreaRecorder"]], "__init__() (pywr.recorders.numpyarrayarearecorder method)": [[105, "pywr.recorders.NumpyArrayAreaRecorder.__init__"]], "numpyarraydailyprofileparameterrecorder (class in pywr.recorders)": [[106, "pywr.recorders.NumpyArrayDailyProfileParameterRecorder"]], "__init__() (pywr.recorders.numpyarraydailyprofileparameterrecorder method)": [[106, "pywr.recorders.NumpyArrayDailyProfileParameterRecorder.__init__"]], "numpyarrayindexparameterrecorder (class in pywr.recorders)": [[107, "pywr.recorders.NumpyArrayIndexParameterRecorder"]], "__init__() (pywr.recorders.numpyarrayindexparameterrecorder method)": [[107, "pywr.recorders.NumpyArrayIndexParameterRecorder.__init__"]], "numpyarraylevelrecorder (class in pywr.recorders)": [[108, "pywr.recorders.NumpyArrayLevelRecorder"]], "__init__() (pywr.recorders.numpyarraylevelrecorder method)": [[108, "pywr.recorders.NumpyArrayLevelRecorder.__init__"]], "numpyarraynodecurtailmentratiorecorder (class in pywr.recorders)": [[109, "pywr.recorders.NumpyArrayNodeCurtailmentRatioRecorder"]], "__init__() (pywr.recorders.numpyarraynodecurtailmentratiorecorder method)": [[109, "pywr.recorders.NumpyArrayNodeCurtailmentRatioRecorder.__init__"]], "numpyarraynodedeficitrecorder (class in pywr.recorders)": [[110, "pywr.recorders.NumpyArrayNodeDeficitRecorder"]], "__init__() (pywr.recorders.numpyarraynodedeficitrecorder method)": [[110, "pywr.recorders.NumpyArrayNodeDeficitRecorder.__init__"]], "numpyarraynoderecorder (class in pywr.recorders)": [[111, "pywr.recorders.NumpyArrayNodeRecorder"]], "__init__() (pywr.recorders.numpyarraynoderecorder method)": [[111, "pywr.recorders.NumpyArrayNodeRecorder.__init__"]], "numpyarraynodesuppliedratiorecorder (class in pywr.recorders)": [[112, "pywr.recorders.NumpyArrayNodeSuppliedRatioRecorder"]], "__init__() (pywr.recorders.numpyarraynodesuppliedratiorecorder method)": [[112, "pywr.recorders.NumpyArrayNodeSuppliedRatioRecorder.__init__"]], "numpyarrayparameterrecorder (class in pywr.recorders)": [[113, "pywr.recorders.NumpyArrayParameterRecorder"]], "__init__() (pywr.recorders.numpyarrayparameterrecorder method)": [[113, "pywr.recorders.NumpyArrayParameterRecorder.__init__"]], "numpyarraystoragerecorder (class in pywr.recorders)": [[114, "pywr.recorders.NumpyArrayStorageRecorder"]], "__init__() (pywr.recorders.numpyarraystoragerecorder method)": [[114, "pywr.recorders.NumpyArrayStorageRecorder.__init__"]], "parameterrecorder (class in pywr.recorders)": [[115, "pywr.recorders.ParameterRecorder"]], "__init__() (pywr.recorders.parameterrecorder method)": [[115, "pywr.recorders.ParameterRecorder.__init__"]], "recorder (class in pywr.recorders)": [[116, "pywr.recorders.Recorder"]], "__init__() (pywr.recorders.recorder method)": [[116, "pywr.recorders.Recorder.__init__"]], "rollingmeanflownoderecorder (class in pywr.recorders)": [[117, "pywr.recorders.RollingMeanFlowNodeRecorder"]], "__init__() (pywr.recorders.rollingmeanflownoderecorder method)": [[117, "pywr.recorders.RollingMeanFlowNodeRecorder.__init__"]], "rollingwindowparameterrecorder (class in pywr.recorders)": [[118, "pywr.recorders.RollingWindowParameterRecorder"]], "__init__() (pywr.recorders.rollingwindowparameterrecorder method)": [[118, "pywr.recorders.RollingWindowParameterRecorder.__init__"]], "seasonalflowdurationcurverecorder (class in pywr.recorders)": [[119, "pywr.recorders.SeasonalFlowDurationCurveRecorder"]], "__init__() (pywr.recorders.seasonalflowdurationcurverecorder method)": [[119, "pywr.recorders.SeasonalFlowDurationCurveRecorder.__init__"]], "storagedurationcurverecorder (class in pywr.recorders)": [[120, "pywr.recorders.StorageDurationCurveRecorder"]], "__init__() (pywr.recorders.storagedurationcurverecorder method)": [[120, "pywr.recorders.StorageDurationCurveRecorder.__init__"]], "storagerecorder (class in pywr.recorders)": [[121, "pywr.recorders.StorageRecorder"]], "__init__() (pywr.recorders.storagerecorder method)": [[121, "pywr.recorders.StorageRecorder.__init__"]], "tablesrecorder (class in pywr.recorders)": [[122, "pywr.recorders.TablesRecorder"]], "__init__() (pywr.recorders.tablesrecorder method)": [[122, "pywr.recorders.TablesRecorder.__init__"]], "timestepcountindexparameterrecorder (class in pywr.recorders)": [[123, "pywr.recorders.TimestepCountIndexParameterRecorder"]], "__init__() (pywr.recorders.timestepcountindexparameterrecorder method)": [[123, "pywr.recorders.TimestepCountIndexParameterRecorder.__init__"]], "totaldeficitnoderecorder (class in pywr.recorders)": [[124, "pywr.recorders.TotalDeficitNodeRecorder"]], "__init__() (pywr.recorders.totaldeficitnoderecorder method)": [[124, "pywr.recorders.TotalDeficitNodeRecorder.__init__"]], "totalflownoderecorder (class in pywr.recorders)": [[125, "pywr.recorders.TotalFlowNodeRecorder"]], "__init__() (pywr.recorders.totalflownoderecorder method)": [[125, "pywr.recorders.TotalFlowNodeRecorder.__init__"]], "totalhydroenergyrecorder (class in pywr.recorders)": [[126, "pywr.recorders.TotalHydroEnergyRecorder"]], "__init__() (pywr.recorders.totalhydroenergyrecorder method)": [[126, "pywr.recorders.TotalHydroEnergyRecorder.__init__"]], "totalparameterrecorder (class in pywr.recorders)": [[127, "pywr.recorders.TotalParameterRecorder"]], "__init__() (pywr.recorders.totalparameterrecorder method)": [[127, "pywr.recorders.TotalParameterRecorder.__init__"]], "baseoptimisationwrapper (class in pywr.optimisation)": [[132, "pywr.optimisation.BaseOptimisationWrapper"]], "modelcache (class in pywr.optimisation)": [[132, "pywr.optimisation.ModelCache"]], "pygmowrapper (class in pywr.optimisation.pygmo)": [[132, "pywr.optimisation.pygmo.PygmoWrapper"]], "cache_constraints() (in module pywr.optimisation)": [[132, "pywr.optimisation.cache_constraints"]], "cache_objectives() (in module pywr.optimisation)": [[132, "pywr.optimisation.cache_objectives"]], "cache_variable_parameters() (in module pywr.optimisation)": [[132, "pywr.optimisation.cache_variable_parameters"]], "clear_global_model_cache() (in module pywr.optimisation)": [[132, "pywr.optimisation.clear_global_model_cache"]], "customise_model() (pywr.optimisation.baseoptimisationwrapper method)": [[132, "pywr.optimisation.BaseOptimisationWrapper.customise_model"]], "fitness() (pywr.optimisation.pygmo.pygmowrapper method)": [[132, "pywr.optimisation.pygmo.PygmoWrapper.fitness"]], "get_bounds() (pywr.optimisation.pygmo.pygmowrapper method)": [[132, "pywr.optimisation.pygmo.PygmoWrapper.get_bounds"]], "get_nec() (pywr.optimisation.pygmo.pygmowrapper method)": [[132, "pywr.optimisation.pygmo.PygmoWrapper.get_nec"]], "get_nic() (pywr.optimisation.pygmo.pygmowrapper method)": [[132, "pywr.optimisation.pygmo.PygmoWrapper.get_nic"]], "get_nobj() (pywr.optimisation.pygmo.pygmowrapper method)": [[132, "pywr.optimisation.pygmo.PygmoWrapper.get_nobj"]], "make_model() (pywr.optimisation.baseoptimisationwrapper method)": [[132, "pywr.optimisation.BaseOptimisationWrapper.make_model"]], "model (pywr.optimisation.baseoptimisationwrapper property)": [[132, "pywr.optimisation.BaseOptimisationWrapper.model"]], "model_constraints (pywr.optimisation.baseoptimisationwrapper property)": [[132, "pywr.optimisation.BaseOptimisationWrapper.model_constraints"]], "model_objectives (pywr.optimisation.baseoptimisationwrapper property)": [[132, "pywr.optimisation.BaseOptimisationWrapper.model_objectives"]], "model_variable_map (pywr.optimisation.baseoptimisationwrapper property)": [[132, "pywr.optimisation.BaseOptimisationWrapper.model_variable_map"]], "model_variables (pywr.optimisation.baseoptimisationwrapper property)": [[132, "pywr.optimisation.BaseOptimisationWrapper.model_variables"]], "module": [[132, "module-pywr.optimisation"], [132, "module-pywr.optimisation.pygmo"], [135, "module-pywr.solvers"], [135, "module-pywr.solvers.cython_glpk"], [136, "module-pywr.utils.bisect"]], "pywr.optimisation": [[132, "module-pywr.optimisation"]], "pywr.optimisation.pygmo": [[132, "module-pywr.optimisation.pygmo"]], "abstractnodedata (class in pywr.solvers.cython_glpk)": [[135, "pywr.solvers.cython_glpk.AbstractNodeData"]], "aggnodefactordata (class in pywr.solvers.cython_glpk)": [[135, "pywr.solvers.cython_glpk.AggNodeFactorData"]], "basismanager (class in pywr.solvers.cython_glpk)": [[135, "pywr.solvers.cython_glpk.BasisManager"]], "cythonglpkedgesolver (class in pywr.solvers)": [[135, "pywr.solvers.CythonGLPKEdgeSolver"]], "cythonglpkedgesolver (class in pywr.solvers.cython_glpk)": [[135, "pywr.solvers.cython_glpk.CythonGLPKEdgeSolver"]], "cythonglpksolver (class in pywr.solvers)": [[135, "pywr.solvers.CythonGLPKSolver"]], "cythonglpksolver (class in pywr.solvers.cython_glpk)": [[135, "pywr.solvers.cython_glpk.CythonGLPKSolver"]], "glpkerror": [[135, "pywr.solvers.cython_glpk.GLPKError"]], "glpkinternalerror": [[135, "pywr.solvers.cython_glpk.GLPKInternalError"]], "glpksolver (class in pywr.solvers.cython_glpk)": [[135, "pywr.solvers.cython_glpk.GLPKSolver"]], "nullsolver (class in pywr.solvers)": [[135, "pywr.solvers.NullSolver"]], "solver (class in pywr.solvers)": [[135, "pywr.solvers.Solver"]], "dump_glpk() (pywr.solvers.cythonglpkedgesolver method)": [[135, "pywr.solvers.CythonGLPKEdgeSolver.dump_glpk"]], "dump_glpk() (pywr.solvers.cythonglpksolver method)": [[135, "pywr.solvers.CythonGLPKSolver.dump_glpk"]], "dump_glpk() (pywr.solvers.cython_glpk.glpksolver method)": [[135, "pywr.solvers.cython_glpk.GLPKSolver.dump_glpk"]], "dump_lp() (pywr.solvers.cythonglpkedgesolver method)": [[135, "pywr.solvers.CythonGLPKEdgeSolver.dump_lp"]], "dump_lp() (pywr.solvers.cythonglpksolver method)": [[135, "pywr.solvers.CythonGLPKSolver.dump_lp"]], "dump_lp() (pywr.solvers.cython_glpk.glpksolver method)": [[135, "pywr.solvers.cython_glpk.GLPKSolver.dump_lp"]], "dump_mps() (pywr.solvers.cythonglpkedgesolver method)": [[135, "pywr.solvers.CythonGLPKEdgeSolver.dump_mps"]], "dump_mps() (pywr.solvers.cythonglpksolver method)": [[135, "pywr.solvers.CythonGLPKSolver.dump_mps"]], "dump_mps() (pywr.solvers.cython_glpk.glpksolver method)": [[135, "pywr.solvers.cython_glpk.GLPKSolver.dump_mps"]], "id (pywr.solvers.cython_glpk.abstractnodedata attribute)": [[135, "pywr.solvers.cython_glpk.AbstractNodeData.id"]], "in_edges (pywr.solvers.cython_glpk.abstractnodedata attribute)": [[135, "pywr.solvers.cython_glpk.AbstractNodeData.in_edges"]], "ind_ptr (pywr.solvers.cython_glpk.aggnodefactordata attribute)": [[135, "pywr.solvers.cython_glpk.AggNodeFactorData.ind_ptr"]], "inds (pywr.solvers.cython_glpk.aggnodefactordata attribute)": [[135, "pywr.solvers.cython_glpk.AggNodeFactorData.inds"]], "is_link (pywr.solvers.cython_glpk.abstractnodedata attribute)": [[135, "pywr.solvers.cython_glpk.AbstractNodeData.is_link"]], "name (pywr.solvers.cythonglpkedgesolver attribute)": [[135, "pywr.solvers.CythonGLPKEdgeSolver.name"]], "name (pywr.solvers.cythonglpksolver attribute)": [[135, "pywr.solvers.CythonGLPKSolver.name"]], "name (pywr.solvers.nullsolver attribute)": [[135, "pywr.solvers.NullSolver.name"]], "name (pywr.solvers.solver attribute)": [[135, "pywr.solvers.Solver.name"]], "node_ind (pywr.solvers.cython_glpk.aggnodefactordata attribute)": [[135, "pywr.solvers.cython_glpk.AggNodeFactorData.node_ind"]], "out_edges (pywr.solvers.cython_glpk.abstractnodedata attribute)": [[135, "pywr.solvers.cython_glpk.AbstractNodeData.out_edges"]], "pywr.solvers": [[135, "module-pywr.solvers"]], "pywr.solvers.cython_glpk": [[135, "module-pywr.solvers.cython_glpk"]], "reset() (pywr.solvers.cythonglpkedgesolver method)": [[135, "pywr.solvers.CythonGLPKEdgeSolver.reset"]], "reset() (pywr.solvers.cythonglpksolver method)": [[135, "pywr.solvers.CythonGLPKSolver.reset"]], "reset() (pywr.solvers.nullsolver method)": [[135, "pywr.solvers.NullSolver.reset"]], "reset() (pywr.solvers.solver method)": [[135, "pywr.solvers.Solver.reset"]], "reset() (pywr.solvers.cython_glpk.cythonglpkedgesolver method)": [[135, "pywr.solvers.cython_glpk.CythonGLPKEdgeSolver.reset"]], "reset() (pywr.solvers.cython_glpk.cythonglpksolver method)": [[135, "pywr.solvers.cython_glpk.CythonGLPKSolver.reset"]], "reset() (pywr.solvers.cython_glpk.glpksolver method)": [[135, "pywr.solvers.cython_glpk.GLPKSolver.reset"]], "retry_solve (pywr.solvers.cythonglpkedgesolver property)": [[135, "pywr.solvers.CythonGLPKEdgeSolver.retry_solve"]], "retry_solve (pywr.solvers.cythonglpksolver property)": [[135, "pywr.solvers.CythonGLPKSolver.retry_solve"]], "retry_solve (pywr.solvers.cython_glpk.cythonglpkedgesolver attribute)": [[135, "pywr.solvers.cython_glpk.CythonGLPKEdgeSolver.retry_solve"]], "retry_solve (pywr.solvers.cython_glpk.cythonglpksolver attribute)": [[135, "pywr.solvers.cython_glpk.CythonGLPKSolver.retry_solve"]], "route_flows_arr (pywr.solvers.cython_glpk.cythonglpkedgesolver attribute)": [[135, "pywr.solvers.cython_glpk.CythonGLPKEdgeSolver.route_flows_arr"]], "route_flows_arr (pywr.solvers.cython_glpk.cythonglpksolver attribute)": [[135, "pywr.solvers.cython_glpk.CythonGLPKSolver.route_flows_arr"]], "routes (pywr.solvers.cythonglpksolver property)": [[135, "pywr.solvers.CythonGLPKSolver.routes"]], "routes (pywr.solvers.cython_glpk.cythonglpksolver attribute)": [[135, "pywr.solvers.cython_glpk.CythonGLPKSolver.routes"]], "routes_flows_array (pywr.solvers.cythonglpksolver property)": [[135, "pywr.solvers.CythonGLPKSolver.routes_flows_array"]], "row (pywr.solvers.cython_glpk.abstractnodedata attribute)": [[135, "pywr.solvers.cython_glpk.AbstractNodeData.row"]], "row (pywr.solvers.cython_glpk.aggnodefactordata attribute)": [[135, "pywr.solvers.cython_glpk.AggNodeFactorData.row"]], "save_routes_flows (pywr.solvers.cythonglpksolver property)": [[135, "pywr.solvers.CythonGLPKSolver.save_routes_flows"]], "save_routes_flows (pywr.solvers.cython_glpk.cythonglpksolver attribute)": [[135, "pywr.solvers.cython_glpk.CythonGLPKSolver.save_routes_flows"]], "set_fixed_costs_once (pywr.solvers.cythonglpkedgesolver property)": [[135, "pywr.solvers.CythonGLPKEdgeSolver.set_fixed_costs_once"]], "set_fixed_costs_once (pywr.solvers.cythonglpksolver property)": [[135, "pywr.solvers.CythonGLPKSolver.set_fixed_costs_once"]], "set_fixed_costs_once (pywr.solvers.cython_glpk.glpksolver attribute)": [[135, "pywr.solvers.cython_glpk.GLPKSolver.set_fixed_costs_once"]], "set_fixed_factors_once (pywr.solvers.cythonglpkedgesolver property)": [[135, "pywr.solvers.CythonGLPKEdgeSolver.set_fixed_factors_once"]], "set_fixed_factors_once (pywr.solvers.cythonglpksolver property)": [[135, "pywr.solvers.CythonGLPKSolver.set_fixed_factors_once"]], "set_fixed_factors_once (pywr.solvers.cython_glpk.glpksolver attribute)": [[135, "pywr.solvers.cython_glpk.GLPKSolver.set_fixed_factors_once"]], "set_fixed_flows_once (pywr.solvers.cythonglpkedgesolver property)": [[135, "pywr.solvers.CythonGLPKEdgeSolver.set_fixed_flows_once"]], "set_fixed_flows_once (pywr.solvers.cythonglpksolver property)": [[135, "pywr.solvers.CythonGLPKSolver.set_fixed_flows_once"]], "set_fixed_flows_once (pywr.solvers.cython_glpk.glpksolver attribute)": [[135, "pywr.solvers.cython_glpk.GLPKSolver.set_fixed_flows_once"]], "set_solver_options() (pywr.solvers.cython_glpk.glpksolver method)": [[135, "pywr.solvers.cython_glpk.GLPKSolver.set_solver_options"]], "settings (pywr.solvers.cythonglpkedgesolver property)": [[135, "pywr.solvers.CythonGLPKEdgeSolver.settings"]], "settings (pywr.solvers.cythonglpksolver property)": [[135, "pywr.solvers.CythonGLPKSolver.settings"]], "settings (pywr.solvers.solver property)": [[135, "pywr.solvers.Solver.settings"]], "setup() (pywr.solvers.cythonglpkedgesolver method)": [[135, "pywr.solvers.CythonGLPKEdgeSolver.setup"]], "setup() (pywr.solvers.cythonglpksolver method)": [[135, "pywr.solvers.CythonGLPKSolver.setup"]], "setup() (pywr.solvers.nullsolver method)": [[135, "pywr.solvers.NullSolver.setup"]], "setup() (pywr.solvers.solver method)": [[135, "pywr.solvers.Solver.setup"]], "setup() (pywr.solvers.cython_glpk.cythonglpkedgesolver method)": [[135, "pywr.solvers.cython_glpk.CythonGLPKEdgeSolver.setup"]], "setup() (pywr.solvers.cython_glpk.cythonglpksolver method)": [[135, "pywr.solvers.cython_glpk.CythonGLPKSolver.setup"]], "setup() (pywr.solvers.cython_glpk.glpksolver method)": [[135, "pywr.solvers.cython_glpk.GLPKSolver.setup"]], "solve() (pywr.solvers.cythonglpkedgesolver method)": [[135, "pywr.solvers.CythonGLPKEdgeSolver.solve"]], "solve() (pywr.solvers.cythonglpksolver method)": [[135, "pywr.solvers.CythonGLPKSolver.solve"]], "solve() (pywr.solvers.nullsolver method)": [[135, "pywr.solvers.NullSolver.solve"]], "solve() (pywr.solvers.solver method)": [[135, "pywr.solvers.Solver.solve"]], "solve() (pywr.solvers.cython_glpk.cythonglpkedgesolver method)": [[135, "pywr.solvers.cython_glpk.CythonGLPKEdgeSolver.solve"]], "solve() (pywr.solvers.cython_glpk.cythonglpksolver method)": [[135, "pywr.solvers.cython_glpk.CythonGLPKSolver.solve"]], "solve() (pywr.solvers.cython_glpk.glpksolver method)": [[135, "pywr.solvers.cython_glpk.GLPKSolver.solve"]], "stats (pywr.solvers.cythonglpkedgesolver property)": [[135, "pywr.solvers.CythonGLPKEdgeSolver.stats"]], "stats (pywr.solvers.cythonglpksolver property)": [[135, "pywr.solvers.CythonGLPKSolver.stats"]], "stats (pywr.solvers.solver property)": [[135, "pywr.solvers.Solver.stats"]], "stats (pywr.solvers.cython_glpk.cythonglpkedgesolver attribute)": [[135, "pywr.solvers.cython_glpk.CythonGLPKEdgeSolver.stats"]], "stats (pywr.solvers.cython_glpk.cythonglpksolver attribute)": [[135, "pywr.solvers.cython_glpk.CythonGLPKSolver.stats"]], "use_presolve (pywr.solvers.cythonglpkedgesolver property)": [[135, "pywr.solvers.CythonGLPKEdgeSolver.use_presolve"]], "use_presolve (pywr.solvers.cythonglpksolver property)": [[135, "pywr.solvers.CythonGLPKSolver.use_presolve"]], "use_presolve (pywr.solvers.cython_glpk.glpksolver attribute)": [[135, "pywr.solvers.cython_glpk.GLPKSolver.use_presolve"]], "use_unsafe_api (pywr.solvers.cythonglpkedgesolver property)": [[135, "pywr.solvers.CythonGLPKEdgeSolver.use_unsafe_api"]], "use_unsafe_api (pywr.solvers.cythonglpksolver property)": [[135, "pywr.solvers.CythonGLPKSolver.use_unsafe_api"]], "use_unsafe_api (pywr.solvers.cython_glpk.glpksolver attribute)": [[135, "pywr.solvers.cython_glpk.GLPKSolver.use_unsafe_api"]], "vals (pywr.solvers.cython_glpk.aggnodefactordata attribute)": [[135, "pywr.solvers.cython_glpk.AggNodeFactorData.vals"]], "bisectionsearchmodel (class in pywr.utils.bisect)": [[136, "pywr.utils.bisect.BisectionSearchModel"]], "pywr.utils.bisect": [[136, "module-pywr.utils.bisect"]], "run() (pywr.utils.bisect.bisectionsearchmodel method)": [[136, "pywr.utils.bisect.BisectionSearchModel.run"]]}})